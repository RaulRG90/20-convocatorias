import { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';
import { faCloudUploadAlt, faFile, faTrashAlt } from '@fortawesome/free-solid-svg-icons';
import { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { CommonModule } from '@angular/common';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@fortawesome/angular-fontawesome';
import * as ɵngcc2 from '@angular/common';

const _c0 = ["fileInput"];
const _c1 = function () { return ["fas", "cloud-upload-alt"]; };
function MdbFileUploadComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵelement(1, "fa-icon", 9);
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", ɵngcc0.ɵɵpureFunction0(2, _c1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r0.textTranslation.fileText);
} }
const _c2 = function () { return ["fas", "trash-alt"]; };
function MdbFileUploadComponent_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 10);
    ɵngcc0.ɵɵlistener("click", function MdbFileUploadComponent_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.reset(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "fa-icon", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r2.textTranslation.removeText);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", ɵngcc0.ɵɵpureFunction0(2, _c2));
} }
function MdbFileUploadComponent_div_7_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelement(1, "img", 20);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("src", ctx_r7.url, ɵngcc0.ɵɵsanitizeUrl);
} }
const _c3 = function () { return ["fas", "file"]; };
function MdbFileUploadComponent_div_7_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 21);
    ɵngcc0.ɵɵelement(1, "fa-icon", 22);
    ɵngcc0.ɵɵelementStart(2, "span", 23);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", ɵngcc0.ɵɵpureFunction0(2, _c3));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r8.fileType);
} }
function MdbFileUploadComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 12, 13);
    ɵngcc0.ɵɵtemplate(2, MdbFileUploadComponent_div_7_span_2_Template, 2, 1, "span", 14);
    ɵngcc0.ɵɵtemplate(3, MdbFileUploadComponent_div_7_span_3_Template, 4, 3, "span", 15);
    ɵngcc0.ɵɵelementStart(4, "div", 16);
    ɵngcc0.ɵɵelementStart(5, "div", 17);
    ɵngcc0.ɵɵelementStart(6, "p", 18);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "p", 19);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r3.isFileAdded || ctx_r3.defaultPreview) && ctx_r3.isImageFile);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r3.isImageFile);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.fileName);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.textTranslation.imageFileText);
} }
const _c4 = function (a0) { return { "disabled": a0 }; };
class MdbFileUploadComponent {
    constructor(library) {
        this.disabled = false;
        this.height = 200;
        this.textTranslation = {
            fileText: 'Drag and drop a file here or click',
            removeText: 'Remove',
            imageFileText: 'Drag and drop or click to replace',
        };
        this.fileAdded = new EventEmitter();
        this.fileRemoved = new EventEmitter();
        this.imageFileExtensions = ['png', 'jpg', 'jpeg', 'bmp', 'gif'];
        this.isFileAdded = false;
        this.isImageFile = false;
        this.defaultPreview = false;
        library.addIcons(faCloudUploadAlt, faFile, faTrashAlt);
    }
    get defaultFile() {
        return this._defaultFile;
    }
    set defaultFile(value) {
        if (value) {
            this._defaultFile = value;
            this._setDefaultPreview(value);
        }
    }
    _setDefaultPreview(url) {
        this.url = url;
        this.fileName = this._cleanFileName(url);
        this.defaultPreview = true;
        if (this.isImage(this.fileName)) {
            this.isImageFile = true;
        }
        else {
            this.isImageFile = false;
        }
    }
    ngOnChanges(changes) {
        if (changes['customText']) {
            const currentValue = changes['customText'].currentValue;
            Object.keys(currentValue).forEach((k) => {
                this.textTranslation[k] = currentValue[k];
            });
        }
    }
    onFilesAdded() {
        if (!this.dragging && !this.disabled) {
            const file = this.fileInput.nativeElement.files[0];
            if (file) {
                this.fileType = this.getFileType(file.name);
                this.fileName = file.name;
                this.isFileAdded = true;
                this.showPreview(file);
                this.fileAdded.emit(file);
            }
        }
    }
    onFileDrop(event) {
        if (event.dataTransfer && this.dragging && !this.disabled) {
            event.dataTransfer.dropEffect = 'copy';
            const file = event.dataTransfer.files[0];
            this.fileType = this.getFileType(file.name);
            this.fileName = file.name;
            this.showPreview(file);
        }
        this.dragging = false;
    }
    onDragOver(event) {
        if (!this.disabled) {
            this.dragging = true;
            event.preventDefault();
            event.stopPropagation();
        }
    }
    onDragLeave(event) {
        if (!this.disabled) {
            this.dragging = false;
            event.preventDefault();
            event.stopPropagation();
        }
    }
    reset() {
        if (this.isFileAdded) {
            this.removePreview();
            this.fileInput.nativeElement.value = '';
            this.fileRemoved.emit();
        }
        if (this.defaultPreview) {
            this.fileInput.nativeElement.value = '';
            this.defaultPreview = false;
        }
    }
    showPreview(file) {
        if (this.isImage(file.name)) {
            const reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = () => {
                this.url = reader.result;
            };
            this.isImageFile = true;
        }
        else {
            this.isImageFile = false;
        }
        if (this.defaultPreview) {
            this.defaultPreview = false;
        }
    }
    removePreview() {
        this.isFileAdded = false;
    }
    getFileType(fileName) {
        return fileName.split('.').pop().toLowerCase();
    }
    isImage(fileName) {
        return this.imageFileExtensions.indexOf(this.getFileType(fileName)) !== -1;
    }
    _cleanFileName(url) {
        return url.split('/').pop();
    }
}
MdbFileUploadComponent.ɵfac = function MdbFileUploadComponent_Factory(t) { return new (t || MdbFileUploadComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FaIconLibrary)); };
MdbFileUploadComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MdbFileUploadComponent, selectors: [["mdb-file-upload"]], viewQuery: function MdbFileUploadComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);
    } }, inputs: { disabled: "disabled", height: "height", defaultFile: "defaultFile", customText: "customText" }, outputs: { fileAdded: "fileAdded", fileRemoved: "fileRemoved" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 8, vars: 9, consts: [[1, "mdb-file-upload-wrapper", 3, "drop", "dragover", "dragleave", "click"], [1, "mdb-file-upload", "view", 3, "ngClass"], ["class", "upload-message", 4, "ngIf"], [1, "mask", "rgba-stylish-slight"], ["type", "file", 3, "disabled", "change"], ["fileInput", ""], ["class", "remove-button", 3, "click", 4, "ngIf"], ["class", "file-preview", 4, "ngIf"], [1, "upload-message"], ["size", "4x", 3, "icon"], [1, "remove-button", 3, "click"], [3, "icon"], [1, "file-preview"], ["filePreview", ""], [4, "ngIf"], ["class", "file-icon", 4, "ngIf"], [1, "preview-message"], [1, "preview-message-inner"], [1, "preview-filename"], [1, "preview-description"], [1, "file-preview-img", 3, "src"], [1, "file-icon"], ["size", "5x", 3, "icon"], [1, "file-extension"]], template: function MdbFileUploadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵlistener("drop", function MdbFileUploadComponent_Template_div_drop_0_listener($event) { return ctx.onFileDrop($event); })("dragover", function MdbFileUploadComponent_Template_div_dragover_0_listener($event) { return ctx.onDragOver($event); })("dragleave", function MdbFileUploadComponent_Template_div_dragleave_0_listener($event) { return ctx.onDragLeave($event); })("click", function MdbFileUploadComponent_Template_div_click_0_listener($event) { return $event.stopPropagation(); });
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵtemplate(2, MdbFileUploadComponent_div_2_Template, 4, 3, "div", 2);
        ɵngcc0.ɵɵelement(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "input", 4, 5);
        ɵngcc0.ɵɵlistener("change", function MdbFileUploadComponent_Template_input_change_4_listener() { return ctx.onFilesAdded(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, MdbFileUploadComponent_button_6_Template, 4, 3, "button", 6);
        ɵngcc0.ɵɵtemplate(7, MdbFileUploadComponent_div_7_Template, 10, 4, "div", 7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("height", ctx.height, "px");
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(7, _c4, ctx.disabled));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isFileAdded && !ctx.defaultPreview);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isFileAdded || ctx.defaultPreview);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isFileAdded || ctx.defaultPreview);
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc1.FaIconComponent], styles: [".mdb-file-upload-wrapper[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f}.mdb-file-upload[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:relative;max-width:100%;overflow:hidden;color:#ccc;text-align:center}.mdb-file-upload[_ngcontent-%COMP%]   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:0;transition:all .15s linear}.mdb-file-upload[_ngcontent-%COMP%]   .rgba-stylish-slight[_ngcontent-%COMP%]{background-color:#3e45511a}.mdb-file-upload[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer;z-index:5}.mdb-file-upload[_ngcontent-%COMP%]   .upload-message[_ngcontent-%COMP%]{text-align:center;font-size:1rem}.mdb-file-upload[_ngcontent-%COMP%]   .file-preview[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;overflow:hidden;text-align:center;display:flex;justify-content:center;align-items:center}.mdb-file-upload[_ngcontent-%COMP%]   .view[_ngcontent-%COMP%]   .mask[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}.mdb-file-upload[_ngcontent-%COMP%]   .preview-message[_ngcontent-%COMP%]{position:absolute;left:0;top:0;right:0;bottom:0;z-index:3;background:rgba(0,0,0,.7);opacity:0;transition:opacity .15s linear}.mdb-file-upload[_ngcontent-%COMP%]   .preview-message-inner[_ngcontent-%COMP%]{margin-top:-5px;position:absolute;top:50%;transform:translateY(-40%);-webkit-backface-visibility:hidden;backface-visibility:hidden;width:100%;max-width:100%;transition:all .2s ease}.mdb-file-upload[_ngcontent-%COMP%]   .preview-filename[_ngcontent-%COMP%]{padding:0;margin:0;position:relative;width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#fff;text-align:center;line-height:25px;font-weight:700}.mdb-file-upload[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]{margin-top:15px;padding-top:15px;font-size:14px;position:relative;opacity:.8}.mdb-file-upload[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]:before{content:\"\";position:absolute;top:0;left:50%;transform:translate(-50%);background:#fff;width:30px;height:2px}.mdb-file-upload[_ngcontent-%COMP%]   .file-icon[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%);position:absolute;color:#777}.mdb-file-upload[_ngcontent-%COMP%]   .file-extension[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:10px;text-transform:uppercase;font-weight:900;font-size:1rem;color:#fff;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mdb-file-upload[_ngcontent-%COMP%]   .remove-button[_ngcontent-%COMP%]{opacity:0;position:absolute;top:10px;right:10px;z-index:7;cursor:pointer;padding:.5rem 1.6rem;font-size:.64rem;font-weight:400;line-height:1.5;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:#ff3547;color:#fff;border:0;border-radius:.125rem;text-transform:uppercase;white-space:normal;word-wrap:break-word;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;margin:.375rem;transition:all .15s ease}.mdb-file-upload[_ngcontent-%COMP%]   .remove-button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-right:5px}.mdb-file-upload.disabled[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:not-allowed}.mdb-file-upload.disabled[_ngcontent-%COMP%]:hover   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:0}.mdb-file-upload.disabled[_ngcontent-%COMP%]   .upload-message[_ngcontent-%COMP%]{opacity:.5;text-decoration:line-through}.mdb-file-upload.disabled[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]{display:none}.mdb-file-upload[_ngcontent-%COMP%]:hover   .preview-message[_ngcontent-%COMP%]{opacity:1}.mdb-file-upload[_ngcontent-%COMP%]:hover   .remove-button[_ngcontent-%COMP%]{opacity:1}.mdb-file-upload[_ngcontent-%COMP%]:hover   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:.8}.rgba-stylish-slight[_ngcontent-%COMP%]{background-color:#3e45511a}.view[_ngcontent-%COMP%]   .mask[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}"] });
MdbFileUploadComponent.ctorParameters = () => [
    { type: FaIconLibrary }
];
MdbFileUploadComponent.propDecorators = {
    fileInput: [{ type: ViewChild, args: ['fileInput', { static: true },] }],
    disabled: [{ type: Input }],
    height: [{ type: Input }],
    defaultFile: [{ type: Input }],
    customText: [{ type: Input }],
    fileAdded: [{ type: Output }],
    fileRemoved: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdbFileUploadComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-file-upload',
                template: "<div class=\"mdb-file-upload-wrapper\" (drop)=\"onFileDrop($event)\" (dragover)=\"onDragOver($event)\" (dragleave)=\"onDragLeave($event)\" (click)=\"$event.stopPropagation()\">\n  <div class=\"mdb-file-upload view\" [ngClass]=\"{'disabled': disabled }\" [style.height.px]=\"height\">\n    <div class=\"upload-message\" *ngIf=\"!isFileAdded && !this.defaultPreview\">\n      <fa-icon size=\"4x\" [icon]=\"['fas','cloud-upload-alt']\"></fa-icon>\n      <p>{{textTranslation.fileText}}</p>\n    </div>\n    <div class=\"mask rgba-stylish-slight\"></div>\n    <input #fileInput type=\"file\" (change)=\"onFilesAdded()\" [disabled]=\"disabled\">\n    <button *ngIf=\"isFileAdded || this.defaultPreview\" class=\"remove-button\" (click)=\"reset()\">\n        <span>{{textTranslation.removeText}}</span>\n        <fa-icon [icon]=\"['fas', 'trash-alt']\"></fa-icon>\n    </button>\n    <div #filePreview class=\"file-preview\" *ngIf=\"isFileAdded || this.defaultPreview\">\n      <span *ngIf=\"(isFileAdded || this.defaultPreview) && isImageFile\">\n        <img class=\"file-preview-img\" src=\"{{ url }}\">\n      </span>\n\n      <span *ngIf=\"!isImageFile\" class=\"file-icon\">\n        <fa-icon size=\"5x\" [icon]=\"['fas', 'file']\"></fa-icon>\n        <span class=\"file-extension\">{{ fileType }}</span>\n      </span>\n      <div class=\"preview-message\">\n        <div class=\"preview-message-inner\">\n          <p class=\"preview-filename\">{{ fileName }}</p>\n          <p class=\"preview-description\">{{textTranslation.imageFileText}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n",
                styles: [".mdb-file-upload-wrapper{background-color:#fff;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f}.mdb-file-upload{display:flex;justify-content:center;align-items:center;position:relative;max-width:100%;overflow:hidden;color:#ccc;text-align:center}.mdb-file-upload .mask.rgba-stylish-slight{opacity:0;transition:all .15s linear}.mdb-file-upload .rgba-stylish-slight{background-color:#3e45511a}.mdb-file-upload input{position:absolute;top:0;right:0;bottom:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer;z-index:5}.mdb-file-upload .upload-message{text-align:center;font-size:1rem}.mdb-file-upload .file-preview{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;overflow:hidden;text-align:center;display:flex;justify-content:center;align-items:center}.mdb-file-upload .view .mask{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}.mdb-file-upload .preview-message{position:absolute;left:0;top:0;right:0;bottom:0;z-index:3;background:rgba(0,0,0,.7);opacity:0;transition:opacity .15s linear}.mdb-file-upload .preview-message-inner{margin-top:-5px;position:absolute;top:50%;transform:translateY(-40%);-webkit-backface-visibility:hidden;backface-visibility:hidden;width:100%;max-width:100%;transition:all .2s ease}.mdb-file-upload .preview-filename{padding:0;margin:0;position:relative;width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#fff;text-align:center;line-height:25px;font-weight:700}.mdb-file-upload .preview-description{margin-top:15px;padding-top:15px;font-size:14px;position:relative;opacity:.8}.mdb-file-upload .preview-description:before{content:\"\";position:absolute;top:0;left:50%;transform:translate(-50%);background:#fff;width:30px;height:2px}.mdb-file-upload .file-icon fa-icon{top:50%;left:50%;transform:translate(-50%,-50%);position:absolute;color:#777}.mdb-file-upload .file-extension{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:10px;text-transform:uppercase;font-weight:900;font-size:1rem;color:#fff;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mdb-file-upload .remove-button{opacity:0;position:absolute;top:10px;right:10px;z-index:7;cursor:pointer;padding:.5rem 1.6rem;font-size:.64rem;font-weight:400;line-height:1.5;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:#ff3547;color:#fff;border:0;border-radius:.125rem;text-transform:uppercase;white-space:normal;word-wrap:break-word;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;margin:.375rem;transition:all .15s ease}.mdb-file-upload .remove-button span{padding-right:5px}.mdb-file-upload.disabled input{cursor:not-allowed}.mdb-file-upload.disabled:hover .mask.rgba-stylish-slight{opacity:0}.mdb-file-upload.disabled .upload-message{opacity:.5;text-decoration:line-through}.mdb-file-upload.disabled .preview-description{display:none}.mdb-file-upload:hover .preview-message{opacity:1}.mdb-file-upload:hover .remove-button{opacity:1}.mdb-file-upload:hover .mask.rgba-stylish-slight{opacity:.8}.rgba-stylish-slight{background-color:#3e45511a}.view .mask{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}\n"]
            }]
    }], function () { return [{ type: ɵngcc1.FaIconLibrary }]; }, { disabled: [{
            type: Input
        }], height: [{
            type: Input
        }], fileAdded: [{
            type: Output
        }], fileRemoved: [{
            type: Output
        }], defaultFile: [{
            type: Input
        }], fileInput: [{
            type: ViewChild,
            args: ['fileInput', { static: true }]
        }], customText: [{
            type: Input
        }] }); })();

class MdbFileUploadModule {
}
MdbFileUploadModule.ɵfac = function MdbFileUploadModule_Factory(t) { return new (t || MdbFileUploadModule)(); };
MdbFileUploadModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MdbFileUploadModule });
MdbFileUploadModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule,
            FontAwesomeModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MdbFileUploadModule, [{
        type: NgModule,
        args: [{
                declarations: [MdbFileUploadComponent],
                imports: [
                    CommonModule,
                    FontAwesomeModule
                ],
                exports: [MdbFileUploadComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdbFileUploadModule, { declarations: function () { return [MdbFileUploadComponent]; }, imports: function () { return [CommonModule,
        FontAwesomeModule]; }, exports: function () { return [MdbFileUploadComponent]; } }); })();

/*
 * Public API Surface of mdb-file-upload
 */

/**
 * Generated bundle index. Do not edit.
 */

export { MdbFileUploadComponent, MdbFileUploadModule };

//# sourceMappingURL=mdb-file-upload.js.map