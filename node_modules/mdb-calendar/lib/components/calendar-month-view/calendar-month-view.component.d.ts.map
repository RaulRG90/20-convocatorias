{"version":3,"file":"calendar-month-view.component.d.ts","sources":["calendar-month-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, Renderer2, AfterViewInit, QueryList, ElementRef } from '@angular/core';\nimport { CalendarEvent } from '../../interfaces/calendar-event.interface';\nimport { MdbCalendarOptions } from '../../interfaces/calendar-options.interface';\nexport declare class MdbCalendarMonthViewComponent implements OnInit, AfterViewInit {\n    private renderer;\n    days: QueryList<ElementRef>;\n    get initDate(): Date;\n    set initDate(date: Date);\n    private _initDate;\n    get events(): CalendarEvent[];\n    set events(events: CalendarEvent[]);\n    private _events;\n    weekDaysShort: string[];\n    months: string[];\n    weekDayIndex: number;\n    options: MdbCalendarOptions;\n    dayClicked: EventEmitter<any>;\n    eventClicked: EventEmitter<any>;\n    viewChanged: EventEmitter<string>;\n    monthChanged: EventEmitter<any>;\n    selectedMonth: number;\n    selectedYear: number;\n    selectionStartDate: Date;\n    selectionEndDate: Date;\n    allCells: HTMLElement[];\n    dates: any[];\n    dragStart: any;\n    isDragging: boolean;\n    dragEnd: any;\n    private _isInitialized;\n    constructor(renderer: Renderer2);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    trackByFn(index: any): any;\n    trackByEvent(index: any, item: any): any;\n    trackByDay(index: any, item: any): any;\n    onMouseDown(event: any, day: any): void;\n    onMouseUp(event: any, day: any): void;\n    selectRange(): void;\n    clearSelection(): void;\n    onMouseMove(event: any): void;\n    onDayClick(day: any): void;\n    onEventClick(event: CalendarEvent): void;\n    onViewChange(view: string): void;\n    next(): void;\n    previous(): void;\n    goToToday(): void;\n    getDaysInPreviousMonth(year: number, month: number): number;\n    createMonthView(year: number, month: number): void;\n}\n"]}