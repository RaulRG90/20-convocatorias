{"version":3,"file":"calendar.component.d.ts","sources":["calendar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter } from '@angular/core';\nimport { CalendarEvent } from '../../interfaces/calendar-event.interface';\nimport { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';\nimport { CalendarView } from '../../utils/calendar-view';\nimport { MdbCalendarOptions } from '../../interfaces/calendar-options.interface';\nexport declare class MdbCalendarComponent implements OnInit {\n    private modalService;\n    weekDaysDefault: string[];\n    weekDaysShortDefault: string[];\n    monthsDefault: string[];\n    monthsShortDefault: string[];\n    calendarOptions: MdbCalendarOptions;\n    dayLabels: string[];\n    dayLabelsShort: string[];\n    weekDayIndex: number;\n    startDate: Date;\n    events: CalendarEvent[];\n    options: MdbCalendarOptions;\n    editable: boolean;\n    weekDays: string[];\n    weekDaysShort: string[];\n    months: string[];\n    monthsShort: string[];\n    defaultView: CalendarView;\n    eventDeleted: EventEmitter<CalendarEvent>;\n    eventEdited: EventEmitter<CalendarEvent>;\n    eventAdded: EventEmitter<CalendarEvent>;\n    monthChanged: EventEmitter<any>;\n    weekChanged: EventEmitter<any>;\n    listChanged: EventEmitter<any>;\n    viewChanged: EventEmitter<string>;\n    modalRef: MDBModalRef;\n    MS_IN_DAY: number;\n    view: typeof CalendarView;\n    currentView: CalendarView;\n    private _isInitialized;\n    constructor(modalService: MDBModalService);\n    ngOnInit(): void;\n    private _changeDaysOrder;\n    getFormattedEvent(event: CalendarEvent): {\n        id: string;\n        name: string;\n        startDate: string;\n        endDate: string;\n        color: string;\n    };\n    formatDate(date: Date): void;\n    onDayClick(day: any): void;\n    onEventClick(event: CalendarEvent): void;\n    onViewChange(view: string): void;\n    onMonthChange(event: any): void;\n    onWeekChange(event: any): void;\n    onListChange(event: any): void;\n    openAddModal(event: CalendarEvent): void;\n    openEditModal(event: CalendarEvent): void;\n}\n"]}