import { OnInit, EventEmitter } from '@angular/core';
import { CalendarEvent } from '../../interfaces/calendar-event.interface';
import { MDBModalService, MDBModalRef } from 'angular-bootstrap-md';
import { CalendarView } from '../../utils/calendar-view';
import { MdbCalendarOptions } from '../../interfaces/calendar-options.interface';
import * as ɵngcc0 from '@angular/core';
export declare class MdbCalendarComponent implements OnInit {
    private modalService;
    weekDaysDefault: string[];
    weekDaysShortDefault: string[];
    monthsDefault: string[];
    monthsShortDefault: string[];
    calendarOptions: MdbCalendarOptions;
    dayLabels: string[];
    dayLabelsShort: string[];
    weekDayIndex: number;
    startDate: Date;
    events: CalendarEvent[];
    options: MdbCalendarOptions;
    editable: boolean;
    weekDays: string[];
    weekDaysShort: string[];
    months: string[];
    monthsShort: string[];
    defaultView: CalendarView;
    eventDeleted: EventEmitter<CalendarEvent>;
    eventEdited: EventEmitter<CalendarEvent>;
    eventAdded: EventEmitter<CalendarEvent>;
    monthChanged: EventEmitter<any>;
    weekChanged: EventEmitter<any>;
    listChanged: EventEmitter<any>;
    viewChanged: EventEmitter<string>;
    modalRef: MDBModalRef;
    MS_IN_DAY: number;
    view: typeof CalendarView;
    currentView: CalendarView;
    private _isInitialized;
    constructor(modalService: MDBModalService);
    ngOnInit(): void;
    private _changeDaysOrder;
    getFormattedEvent(event: CalendarEvent): {
        id: string;
        name: string;
        startDate: string;
        endDate: string;
        color: string;
    };
    formatDate(date: Date): void;
    onDayClick(day: any): void;
    onEventClick(event: CalendarEvent): void;
    onViewChange(view: string): void;
    onMonthChange(event: any): void;
    onWeekChange(event: any): void;
    onListChange(event: any): void;
    openAddModal(event: CalendarEvent): void;
    openEditModal(event: CalendarEvent): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<MdbCalendarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<MdbCalendarComponent, "mdb-calendar", never, { "startDate": "startDate"; "events": "events"; "editable": "editable"; "weekDays": "weekDays"; "weekDaysShort": "weekDaysShort"; "months": "months"; "monthsShort": "monthsShort"; "options": "options"; "defaultView": "defaultView"; }, { "eventDeleted": "eventDeleted"; "eventEdited": "eventEdited"; "eventAdded": "eventAdded"; "monthChanged": "monthChanged"; "weekChanged": "weekChanged"; "listChanged": "listChanged"; "viewChanged": "viewChanged"; }, never, never>;
}

//# sourceMappingURL=calendar.component.d.ts.map