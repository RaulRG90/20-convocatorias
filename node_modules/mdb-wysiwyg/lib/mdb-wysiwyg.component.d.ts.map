{"version":3,"file":"mdb-wysiwyg.component.d.ts","sources":["mdb-wysiwyg.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, Renderer2, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare class MdbWysiwygComponent implements AfterViewInit, OnDestroy {\n    private renderer;\n    private cdRef;\n    private el;\n    get value(): string;\n    set value(newValue: string);\n    private _value;\n    options: {\n        tooltips: boolean;\n        translations: Array<any>;\n        colors: Array<any>;\n    };\n    valueChange: EventEmitter<string>;\n    valueContent: EventEmitter<string>;\n    textarea: ElementRef;\n    isTextStyleDropdownVisible: boolean;\n    isTextColorDropdownVisible: boolean;\n    selectedTextStyle: string;\n    selectedTextColor: string;\n    showTooltips: boolean;\n    optionsLength: number;\n    textStyleItems: {\n        type: string;\n        selector: string;\n        text: string;\n    }[];\n    textColorItems: {\n        name: string;\n        color: string;\n    }[];\n    textDecorationItems: {\n        type: string;\n        icon: string;\n        tooltip: string;\n    }[];\n    alignItems: {\n        type: string;\n        icon: string;\n        tooltip: string;\n    }[];\n    imageHrefItems: ({\n        type: string;\n        icon: string;\n        tooltip: string;\n        linkURLPlaceholder: string;\n        imageURLPlaceholder?: undefined;\n    } | {\n        type: string;\n        icon: string;\n        tooltip: string;\n        imageURLPlaceholder: string;\n        linkURLPlaceholder?: undefined;\n    })[];\n    listItems: {\n        type: string;\n        icon: string;\n        tooltip: string;\n    }[];\n    private _destroy;\n    private _htmlIsVisible;\n    private wysiwygValueChange$;\n    valueChange$(): Observable<any>;\n    onChange: (_: any) => void;\n    onTouched: () => void;\n    writeValue(value: any): void;\n    valueChanged(): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisableState(isDisabled: boolean): void;\n    constructor(renderer: Renderer2, cdRef: ChangeDetectorRef, el: ElementRef);\n    selectTextStyle(item: any, event: any): void;\n    selectTextColor(item: any, event: any): void;\n    performAction(action: string, event: any): void;\n    toggleHTMLCode(): void;\n    changeTooltipTranslation(array: Array<any>, el: string, value: any): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}