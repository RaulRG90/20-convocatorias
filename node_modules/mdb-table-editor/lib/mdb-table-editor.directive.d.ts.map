{"version":3,"file":"mdb-table-editor.directive.d.ts","sources":["mdb-table-editor.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, OnChanges, Renderer2, SimpleChanges, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare class MdbTableEditorDirective implements OnChanges {\n    private renderer;\n    private el;\n    private ngZone;\n    itemsPerPage: number;\n    rowHighlight: EventEmitter<any>;\n    private highlightedTableRow;\n    private dataArrayUnmodified;\n    private currentPage;\n    private nextShouldBeDisabled;\n    private data;\n    private isDesc;\n    private _searchKey;\n    private _dataArray;\n    private _dataArray$;\n    private _iterableDataArray;\n    private _iterableDataArray$;\n    paginationInfo: {\n        firstItem: number;\n        lastItem: number;\n        allItems: number;\n        activePage: number;\n    };\n    set dataArray(data: any[]);\n    get dataArray(): any[];\n    dataArrayChange(): Observable<any[]>;\n    set iterableDataArray(data: any[]);\n    get iterableDataArray(): any[];\n    iterableDataArrayChange(): Observable<any[]>;\n    constructor(renderer: Renderer2, el: ElementRef, ngZone: NgZone);\n    ngOnChanges(changes: SimpleChanges): void;\n    calculatePagesNumber(): number;\n    updatePaginationInfo(): void;\n    nextPage(switchToLastPage?: boolean): void;\n    prevPage(switchToFirstPage?: boolean): void;\n    disablePrevious(): boolean;\n    disableNext(): boolean | undefined;\n    private filterIterableArray;\n    performSearch(searchKey: string): any;\n    sortArray(property: string): any;\n    private _getClosestEl;\n    private markHighlightAndEmit;\n}\n"]}