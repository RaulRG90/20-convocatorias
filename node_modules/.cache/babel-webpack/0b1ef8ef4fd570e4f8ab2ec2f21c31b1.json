{"ast":null,"code":"import { EventEmitter, Component, ViewChild, Input, Output, NgModule } from '@angular/core';\nimport { faCloudUploadAlt, faFile, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FaIconLibrary, FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@fortawesome/angular-fontawesome';\nimport * as ɵngcc2 from '@angular/common';\nconst _c0 = [\"fileInput\"];\n\nconst _c1 = function () {\n  return [\"fas\", \"cloud-upload-alt\"];\n};\n\nfunction MdbFileUploadComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵelement(1, \"fa-icon\", 9);\n    ɵngcc0.ɵɵelementStart(2, \"p\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"icon\", ɵngcc0.ɵɵpureFunction0(2, _c1));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.textTranslation.fileText);\n  }\n}\n\nconst _c2 = function () {\n  return [\"fas\", \"trash-alt\"];\n};\n\nfunction MdbFileUploadComponent_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"button\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbFileUploadComponent_button_6_Template_button_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.reset();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(3, \"fa-icon\", 11);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.textTranslation.removeText);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"icon\", ɵngcc0.ɵɵpureFunction0(2, _c2));\n  }\n}\n\nfunction MdbFileUploadComponent_div_7_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵelement(1, \"img\", 20);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵpropertyInterpolate(\"src\", ctx_r7.url, ɵngcc0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c3 = function () {\n  return [\"fas\", \"file\"];\n};\n\nfunction MdbFileUploadComponent_div_7_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 21);\n    ɵngcc0.ɵɵelement(1, \"fa-icon\", 22);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 23);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"icon\", ɵngcc0.ɵɵpureFunction0(2, _c3));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.fileType);\n  }\n}\n\nfunction MdbFileUploadComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12, 13);\n    ɵngcc0.ɵɵtemplate(2, MdbFileUploadComponent_div_7_span_2_Template, 2, 1, \"span\", 14);\n    ɵngcc0.ɵɵtemplate(3, MdbFileUploadComponent_div_7_span_3_Template, 4, 3, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(4, \"div\", 16);\n    ɵngcc0.ɵɵelementStart(5, \"div\", 17);\n    ɵngcc0.ɵɵelementStart(6, \"p\", 18);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"p\", 19);\n    ɵngcc0.ɵɵtext(9);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r3.isFileAdded || ctx_r3.defaultPreview) && ctx_r3.isImageFile);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r3.isImageFile);\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.fileName);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.textTranslation.imageFileText);\n  }\n}\n\nconst _c4 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\n\nlet MdbFileUploadComponent = /*#__PURE__*/(() => {\n  class MdbFileUploadComponent {\n    constructor(library) {\n      this.disabled = false;\n      this.height = 200;\n      this.textTranslation = {\n        fileText: 'Drag and drop a file here or click',\n        removeText: 'Remove',\n        imageFileText: 'Drag and drop or click to replace'\n      };\n      this.fileAdded = new EventEmitter();\n      this.fileRemoved = new EventEmitter();\n      this.imageFileExtensions = ['png', 'jpg', 'jpeg', 'bmp', 'gif'];\n      this.isFileAdded = false;\n      this.isImageFile = false;\n      this.defaultPreview = false;\n      library.addIcons(faCloudUploadAlt, faFile, faTrashAlt);\n    }\n\n    get defaultFile() {\n      return this._defaultFile;\n    }\n\n    set defaultFile(value) {\n      if (value) {\n        this._defaultFile = value;\n\n        this._setDefaultPreview(value);\n      }\n    }\n\n    _setDefaultPreview(url) {\n      this.url = url;\n      this.fileName = this._cleanFileName(url);\n      this.defaultPreview = true;\n\n      if (this.isImage(this.fileName)) {\n        this.isImageFile = true;\n      } else {\n        this.isImageFile = false;\n      }\n    }\n\n    ngOnChanges(changes) {\n      if (changes['customText']) {\n        const currentValue = changes['customText'].currentValue;\n        Object.keys(currentValue).forEach(k => {\n          this.textTranslation[k] = currentValue[k];\n        });\n      }\n    }\n\n    onFilesAdded() {\n      if (!this.dragging && !this.disabled) {\n        const file = this.fileInput.nativeElement.files[0];\n\n        if (file) {\n          this.fileType = this.getFileType(file.name);\n          this.fileName = file.name;\n          this.isFileAdded = true;\n          this.showPreview(file);\n          this.fileAdded.emit(file);\n        }\n      }\n    }\n\n    onFileDrop(event) {\n      if (event.dataTransfer && this.dragging && !this.disabled) {\n        event.dataTransfer.dropEffect = 'copy';\n        const file = event.dataTransfer.files[0];\n        this.fileType = this.getFileType(file.name);\n        this.fileName = file.name;\n        this.showPreview(file);\n      }\n\n      this.dragging = false;\n    }\n\n    onDragOver(event) {\n      if (!this.disabled) {\n        this.dragging = true;\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n\n    onDragLeave(event) {\n      if (!this.disabled) {\n        this.dragging = false;\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    }\n\n    reset() {\n      if (this.isFileAdded) {\n        this.removePreview();\n        this.fileInput.nativeElement.value = '';\n        this.fileRemoved.emit();\n      }\n\n      if (this.defaultPreview) {\n        this.fileInput.nativeElement.value = '';\n        this.defaultPreview = false;\n      }\n    }\n\n    showPreview(file) {\n      if (this.isImage(file.name)) {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = () => {\n          this.url = reader.result;\n        };\n\n        this.isImageFile = true;\n      } else {\n        this.isImageFile = false;\n      }\n\n      if (this.defaultPreview) {\n        this.defaultPreview = false;\n      }\n    }\n\n    removePreview() {\n      this.isFileAdded = false;\n    }\n\n    getFileType(fileName) {\n      return fileName.split('.').pop().toLowerCase();\n    }\n\n    isImage(fileName) {\n      return this.imageFileExtensions.indexOf(this.getFileType(fileName)) !== -1;\n    }\n\n    _cleanFileName(url) {\n      return url.split('/').pop();\n    }\n\n  }\n\n  MdbFileUploadComponent.ɵfac = function MdbFileUploadComponent_Factory(t) {\n    return new (t || MdbFileUploadComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FaIconLibrary));\n  };\n\n  MdbFileUploadComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbFileUploadComponent,\n    selectors: [[\"mdb-file-upload\"]],\n    viewQuery: function MdbFileUploadComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      height: \"height\",\n      defaultFile: \"defaultFile\",\n      customText: \"customText\"\n    },\n    outputs: {\n      fileAdded: \"fileAdded\",\n      fileRemoved: \"fileRemoved\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 8,\n    vars: 9,\n    consts: [[1, \"mdb-file-upload-wrapper\", 3, \"drop\", \"dragover\", \"dragleave\", \"click\"], [1, \"mdb-file-upload\", \"view\", 3, \"ngClass\"], [\"class\", \"upload-message\", 4, \"ngIf\"], [1, \"mask\", \"rgba-stylish-slight\"], [\"type\", \"file\", 3, \"disabled\", \"change\"], [\"fileInput\", \"\"], [\"class\", \"remove-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"file-preview\", 4, \"ngIf\"], [1, \"upload-message\"], [\"size\", \"4x\", 3, \"icon\"], [1, \"remove-button\", 3, \"click\"], [3, \"icon\"], [1, \"file-preview\"], [\"filePreview\", \"\"], [4, \"ngIf\"], [\"class\", \"file-icon\", 4, \"ngIf\"], [1, \"preview-message\"], [1, \"preview-message-inner\"], [1, \"preview-filename\"], [1, \"preview-description\"], [1, \"file-preview-img\", 3, \"src\"], [1, \"file-icon\"], [\"size\", \"5x\", 3, \"icon\"], [1, \"file-extension\"]],\n    template: function MdbFileUploadComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"drop\", function MdbFileUploadComponent_Template_div_drop_0_listener($event) {\n          return ctx.onFileDrop($event);\n        })(\"dragover\", function MdbFileUploadComponent_Template_div_dragover_0_listener($event) {\n          return ctx.onDragOver($event);\n        })(\"dragleave\", function MdbFileUploadComponent_Template_div_dragleave_0_listener($event) {\n          return ctx.onDragLeave($event);\n        })(\"click\", function MdbFileUploadComponent_Template_div_click_0_listener($event) {\n          return $event.stopPropagation();\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MdbFileUploadComponent_div_2_Template, 4, 3, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function MdbFileUploadComponent_Template_input_change_4_listener() {\n          return ctx.onFilesAdded();\n        });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, MdbFileUploadComponent_button_6_Template, 4, 3, \"button\", 6);\n        ɵngcc0.ɵɵtemplate(7, MdbFileUploadComponent_div_7_Template, 10, 4, \"div\", 7);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.height, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(7, _c4, ctx.disabled));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.isFileAdded && !ctx.defaultPreview);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFileAdded || ctx.defaultPreview);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isFileAdded || ctx.defaultPreview);\n      }\n    },\n    directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc1.FaIconComponent],\n    styles: [\".mdb-file-upload-wrapper[_ngcontent-%COMP%]{background-color:#fff;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f}.mdb-file-upload[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;position:relative;max-width:100%;overflow:hidden;color:#ccc;text-align:center}.mdb-file-upload[_ngcontent-%COMP%]   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:0;transition:all .15s linear}.mdb-file-upload[_ngcontent-%COMP%]   .rgba-stylish-slight[_ngcontent-%COMP%]{background-color:#3e45511a}.mdb-file-upload[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;height:100%;width:100%;opacity:0;cursor:pointer;z-index:5}.mdb-file-upload[_ngcontent-%COMP%]   .upload-message[_ngcontent-%COMP%]{text-align:center;font-size:1rem}.mdb-file-upload[_ngcontent-%COMP%]   .file-preview[_ngcontent-%COMP%]{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;overflow:hidden;text-align:center;display:flex;justify-content:center;align-items:center}.mdb-file-upload[_ngcontent-%COMP%]   .view[_ngcontent-%COMP%]   .mask[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}.mdb-file-upload[_ngcontent-%COMP%]   .preview-message[_ngcontent-%COMP%]{position:absolute;left:0;top:0;right:0;bottom:0;z-index:3;background:rgba(0,0,0,.7);opacity:0;transition:opacity .15s linear}.mdb-file-upload[_ngcontent-%COMP%]   .preview-message-inner[_ngcontent-%COMP%]{margin-top:-5px;position:absolute;top:50%;transform:translateY(-40%);-webkit-backface-visibility:hidden;backface-visibility:hidden;width:100%;max-width:100%;transition:all .2s ease}.mdb-file-upload[_ngcontent-%COMP%]   .preview-filename[_ngcontent-%COMP%]{padding:0;margin:0;position:relative;width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;color:#fff;text-align:center;line-height:25px;font-weight:700}.mdb-file-upload[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]{margin-top:15px;padding-top:15px;font-size:14px;position:relative;opacity:.8}.mdb-file-upload[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]:before{content:\\\"\\\";position:absolute;top:0;left:50%;transform:translate(-50%);background:#fff;width:30px;height:2px}.mdb-file-upload[_ngcontent-%COMP%]   .file-icon[_ngcontent-%COMP%]   fa-icon[_ngcontent-%COMP%]{top:50%;left:50%;transform:translate(-50%,-50%);position:absolute;color:#777}.mdb-file-upload[_ngcontent-%COMP%]   .file-extension[_ngcontent-%COMP%]{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);margin-top:10px;text-transform:uppercase;font-weight:900;font-size:1rem;color:#fff;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mdb-file-upload[_ngcontent-%COMP%]   .remove-button[_ngcontent-%COMP%]{opacity:0;position:absolute;top:10px;right:10px;z-index:7;cursor:pointer;padding:.5rem 1.6rem;font-size:.64rem;font-weight:400;line-height:1.5;text-align:center;-webkit-user-select:none;-moz-user-select:none;user-select:none;background-color:#ff3547;color:#fff;border:0;border-radius:.125rem;text-transform:uppercase;white-space:normal;word-wrap:break-word;box-shadow:0 2px 5px #00000029,0 2px 10px #0000001f;margin:.375rem;transition:all .15s ease}.mdb-file-upload[_ngcontent-%COMP%]   .remove-button[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{padding-right:5px}.mdb-file-upload.disabled[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{cursor:not-allowed}.mdb-file-upload.disabled[_ngcontent-%COMP%]:hover   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:0}.mdb-file-upload.disabled[_ngcontent-%COMP%]   .upload-message[_ngcontent-%COMP%]{opacity:.5;text-decoration:line-through}.mdb-file-upload.disabled[_ngcontent-%COMP%]   .preview-description[_ngcontent-%COMP%]{display:none}.mdb-file-upload[_ngcontent-%COMP%]:hover   .preview-message[_ngcontent-%COMP%]{opacity:1}.mdb-file-upload[_ngcontent-%COMP%]:hover   .remove-button[_ngcontent-%COMP%]{opacity:1}.mdb-file-upload[_ngcontent-%COMP%]:hover   .mask.rgba-stylish-slight[_ngcontent-%COMP%]{opacity:.8}.rgba-stylish-slight[_ngcontent-%COMP%]{background-color:#3e45511a}.view[_ngcontent-%COMP%]   .mask[_ngcontent-%COMP%]{position:absolute;top:0;left:0;right:0;bottom:0;overflow:hidden;width:100%;height:100%;background-attachment:fixed}\"]\n  });\n  return MdbFileUploadComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbFileUploadModule = /*#__PURE__*/(() => {\n  class MdbFileUploadModule {}\n\n  MdbFileUploadModule.ɵfac = function MdbFileUploadModule_Factory(t) {\n    return new (t || MdbFileUploadModule)();\n  };\n\n  MdbFileUploadModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdbFileUploadModule\n  });\n  MdbFileUploadModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FontAwesomeModule]]\n  });\n  return MdbFileUploadModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdbFileUploadModule, {\n    declarations: function () {\n      return [MdbFileUploadComponent];\n    },\n    imports: function () {\n      return [CommonModule, FontAwesomeModule];\n    },\n    exports: function () {\n      return [MdbFileUploadComponent];\n    }\n  });\n})();\n/*\n * Public API Surface of mdb-file-upload\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MdbFileUploadComponent, MdbFileUploadModule }; //# sourceMappingURL=mdb-file-upload.js.map","map":null,"metadata":{},"sourceType":"module"}