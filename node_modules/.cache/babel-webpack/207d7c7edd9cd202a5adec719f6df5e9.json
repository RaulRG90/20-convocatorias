{"ast":null,"code":"import { Component, EventEmitter, Input, Output, Renderer2, ViewChildren, NgModule } from '@angular/core';\nimport { MDBModalRef, MDBModalService, ButtonsModule, InputsModule, IconsModule, ModalModule, TooltipModule } from 'angular-bootstrap-md';\nimport { FormGroup, FormControl, ReactiveFormsModule } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { parse, format, getYear, getMonth, getDate, startOfWeek, startOfDay, subDays, addDays, getDay, addHours, addMinutes, endOfDay, isToday, isWeekend, getDaysInMonth } from 'date-fns';\nimport { take } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from 'angular-bootstrap-md';\nimport * as ɵngcc2 from '@angular/forms';\nimport * as ɵngcc3 from '@angular/common';\n\nfunction EventModalComponent_div_48_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 26);\n    ɵngcc0.ɵɵlistener(\"click\", function EventModalComponent_div_48_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onDelete();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 27);\n    ɵngcc0.ɵɵlistener(\"click\", function EventModalComponent_div_48_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.onSave();\n    });\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.cancelBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.actionBtn);\n  }\n}\n\nfunction EventModalComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 25);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 28);\n    ɵngcc0.ɵɵlistener(\"click\", function EventModalComponent_div_49_Template_button_click_1_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.modalRef.hide();\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"button\", 27);\n    ɵngcc0.ɵɵlistener(\"click\", function EventModalComponent_div_49_Template_button_click_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onSave();\n    });\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.cancelBtn);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.actionBtn);\n  }\n}\n\nfunction MdbCalendarComponent_mdb_calendar_month_view_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mdb-calendar-month-view\", 4);\n    ɵngcc0.ɵɵlistener(\"dayClicked\", function MdbCalendarComponent_mdb_calendar_month_view_1_Template_mdb_calendar_month_view_dayClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ctx_r3.onDayClick($event);\n    })(\"eventClicked\", function MdbCalendarComponent_mdb_calendar_month_view_1_Template_mdb_calendar_month_view_eventClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.onEventClick($event);\n    })(\"viewChanged\", function MdbCalendarComponent_mdb_calendar_month_view_1_Template_mdb_calendar_month_view_viewChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.onViewChange($event);\n    })(\"monthChanged\", function MdbCalendarComponent_mdb_calendar_month_view_1_Template_mdb_calendar_month_view_monthChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onMonthChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"initDate\", ctx_r0.startDate)(\"events\", ctx_r0.events)(\"options\", ctx_r0.calendarOptions)(\"weekDaysShort\", ctx_r0.dayLabelsShort)(\"weekDayIndex\", ctx_r0.weekDayIndex)(\"months\", ctx_r0.months);\n  }\n}\n\nfunction MdbCalendarComponent_mdb_calendar_week_view_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mdb-calendar-week-view\", 5);\n    ɵngcc0.ɵɵlistener(\"dateClicked\", function MdbCalendarComponent_mdb_calendar_week_view_2_Template_mdb_calendar_week_view_dateClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.onDayClick($event);\n    })(\"eventClicked\", function MdbCalendarComponent_mdb_calendar_week_view_2_Template_mdb_calendar_week_view_eventClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onEventClick($event);\n    })(\"viewChanged\", function MdbCalendarComponent_mdb_calendar_week_view_2_Template_mdb_calendar_week_view_viewChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onViewChange($event);\n    })(\"weekChanged\", function MdbCalendarComponent_mdb_calendar_week_view_2_Template_mdb_calendar_week_view_weekChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.onWeekChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"initDate\", ctx_r1.startDate)(\"events\", ctx_r1.events)(\"options\", ctx_r1.calendarOptions)(\"weekDaysShort\", ctx_r1.weekDaysShort)(\"weekDayIndex\", ctx_r1.weekDayIndex)(\"monthsShort\", ctx_r1.monthsShort);\n  }\n}\n\nfunction MdbCalendarComponent_mdb_calendar_list_view_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mdb-calendar-list-view\", 6);\n    ɵngcc0.ɵɵlistener(\"eventClicked\", function MdbCalendarComponent_mdb_calendar_list_view_3_Template_mdb_calendar_list_view_eventClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.onEventClick($event);\n    })(\"viewChanged\", function MdbCalendarComponent_mdb_calendar_list_view_3_Template_mdb_calendar_list_view_viewChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.onViewChange($event);\n    })(\"listChanged\", function MdbCalendarComponent_mdb_calendar_list_view_3_Template_mdb_calendar_list_view_listChanged_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r14);\n      const ctx_r16 = ɵngcc0.ɵɵnextContext();\n      return ctx_r16.onListChange($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"initDate\", ctx_r2.startDate)(\"events\", ctx_r2.events)(\"options\", ctx_r2.calendarOptions)(\"weekDayIndex\", ctx_r2.weekDayIndex)(\"monthsShort\", ctx_r2.monthsShort);\n  }\n}\n\nconst _c0 = [\"dayEl\"];\nconst _c1 = [\"fullDayEl\"];\n\nconst _c2 = function (a0, a1) {\n  return {\n    \"light-blue lighten-5\": a0,\n    \"rgba-mdb-color-slight\": a1\n  };\n};\n\nfunction MdbCalendarWeekViewComponent_th_21_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c2, day_r3.isToday, day_r3.isWeekend && !day_r3.isToday));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate3(\" \", day_r3.day, \" \", day_r3.month, \"/\", day_r3.dayNumber, \" \");\n  }\n}\n\nconst _c3 = function (a0, a1, a2, a3) {\n  return {\n    \"mdb-event-long\": a0,\n    \"mdb-event-start\": a1,\n    \"mdb-event-end\": a2,\n    \"mdb-event-single\": a3\n  };\n};\n\nfunction MdbCalendarWeekViewComponent_td_26_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 19);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_td_26_div_2_Template_div_click_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r9);\n      const event_r7 = restoredCtx.$implicit;\n      const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n      ctx_r8.onEventClick(event_r7);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const event_r7 = ctx.$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mdb-event mdb-event-long text-white small px-1 bg-\", event_r7.color, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate(\"mdbTooltip\", event_r7.name);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(6, _c3, event_r7.longEvent && !event_r7.eventStart && !event_r7.eventEnd, event_r7.longEvent && event_r7.eventStart, event_r7.longEvent && event_r7.eventEnd, !event_r7.longEvent));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(event_r7.name);\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"mdb-today-cell\": a0,\n    \"rgba-mdb-color-slight\": a1\n  };\n};\n\nfunction MdbCalendarWeekViewComponent_td_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 16, 17);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_td_26_Template_td_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const day_r4 = restoredCtx.$implicit;\n      const ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onDateClick(day_r4);\n    })(\"mousedown\", function MdbCalendarWeekViewComponent_td_26_Template_td_mousedown_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const day_r4 = restoredCtx.$implicit;\n      const ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.fullDayMouseDown($event, day_r4);\n    })(\"mouseup\", function MdbCalendarWeekViewComponent_td_26_Template_td_mouseup_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11);\n      const day_r4 = restoredCtx.$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.fullDayMouseUp($event, day_r4);\n    })(\"mouseenter\", function MdbCalendarWeekViewComponent_td_26_Template_td_mouseenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      const ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.fullDayMouseMove($event);\n    });\n    ɵngcc0.ɵɵtemplate(2, MdbCalendarWeekViewComponent_td_26_div_2_Template, 3, 11, \"div\", 18);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r4 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c4, day_r4.isToday, day_r4.isWeekend && !day_r4.isToday));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", day_r4.events);\n  }\n}\n\nconst _c5 = function (a0, a1, a2, a3) {\n  return {\n    \"mdb-vertical-event-long\": a0,\n    \"mdb-vertical-event-start\": a1,\n    \"mdb-vertical-event-end\": a2,\n    \"mdb-vertical-single-event\": a3\n  };\n};\n\nfunction MdbCalendarWeekViewComponent_tr_27_td_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_tr_27_td_4_div_1_Template_div_click_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23);\n      const event_r21 = restoredCtx.$implicit;\n      const ctx_r22 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r22.onEventClick(event_r21);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const event_r21 = ctx.$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mdb-event text-white small px-1 bg-\", event_r21.color, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate(\"mdbTooltip\", event_r21.name);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(6, _c5, event_r21.longEvent && !event_r21.eventStart && !event_r21.eventEnd, event_r21.longEvent && event_r21.eventStart, event_r21.longEvent && event_r21.eventEnd, !event_r21.longEvent));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(event_r21.name);\n  }\n}\n\nfunction MdbCalendarWeekViewComponent_tr_27_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 22);\n    ɵngcc0.ɵɵlistener(\"mousedown\", function MdbCalendarWeekViewComponent_tr_27_td_4_Template_td_mousedown_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r25);\n      const date_r19 = restoredCtx.$implicit;\n      const ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r24.onMouseDown($event, date_r19);\n    })(\"mouseup\", function MdbCalendarWeekViewComponent_tr_27_td_4_Template_td_mouseup_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r25);\n      const date_r19 = restoredCtx.$implicit;\n      const ctx_r26 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r26.onMouseUp($event, date_r19);\n    })(\"mouseenter\", function MdbCalendarWeekViewComponent_tr_27_td_4_Template_td_mouseenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r25);\n      const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r27.onMouseMove($event);\n    })(\"click\", function MdbCalendarWeekViewComponent_tr_27_td_4_Template_td_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r25);\n      const date_r19 = restoredCtx.$implicit;\n      const ctx_r28 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r28.onDateClick(date_r19);\n    });\n    ɵngcc0.ɵɵtemplate(1, MdbCalendarWeekViewComponent_tr_27_td_4_div_1_Template, 3, 11, \"div\", 23);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const date_r19 = ctx.$implicit;\n    const ctx_r18 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(3, _c4, date_r19.isToday, date_r19.isWeekend && !date_r19.isToday));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", date_r19.events)(\"ngForTrackBy\", ctx_r18.trackByFn);\n  }\n}\n\nfunction MdbCalendarWeekViewComponent_tr_27_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\", null, 20);\n    ɵngcc0.ɵɵelementStart(2, \"th\");\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, MdbCalendarWeekViewComponent_tr_27_td_4_Template, 2, 6, \"td\", 21);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r15 = ctx.$implicit;\n    const index_r16 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", index_r16, \":00\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", row_r15.row)(\"ngForTrackBy\", ctx_r2.trackByFn);\n  }\n}\n\nfunction MdbCalendarMonthViewComponent_th_20_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r2);\n  }\n}\n\nfunction MdbCalendarMonthViewComponent_tr_22_td_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_tr_22_td_1_div_4_Template_div_click_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r10);\n      const event_r8 = restoredCtx.$implicit;\n      const ctx_r9 = ɵngcc0.ɵɵnextContext(3);\n      ctx_r9.onEventClick(event_r8);\n      return $event.stopPropagation();\n    });\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const event_r8 = ctx.$implicit;\n    ɵngcc0.ɵɵclassMapInterpolate1(\"mdb-event mdb-event-long text-white small px-1 bg-\", event_r8.color, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate(\"mdbTooltip\", event_r8.name);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(6, _c3, event_r8.longEvent && !event_r8.eventStart && !event_r8.eventEnd, event_r8.longEvent && event_r8.eventStart, event_r8.longEvent && event_r8.eventEnd, !event_r8.longEvent));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(event_r8.name);\n  }\n}\n\nconst _c6 = function (a0) {\n  return {\n    \"text-light\": a0\n  };\n};\n\nfunction MdbCalendarMonthViewComponent_tr_22_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"td\", 14, 15);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_tr_22_td_1_Template_td_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const day_r5 = restoredCtx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.onDayClick(day_r5);\n    })(\"mousedown\", function MdbCalendarMonthViewComponent_tr_22_td_1_Template_td_mousedown_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const day_r5 = restoredCtx.$implicit;\n      const ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.onMouseDown($event, day_r5);\n    })(\"mouseup\", function MdbCalendarMonthViewComponent_tr_22_td_1_Template_td_mouseup_0_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const day_r5 = restoredCtx.$implicit;\n      const ctx_r14 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r14.onMouseUp($event, day_r5);\n    })(\"mouseenter\", function MdbCalendarMonthViewComponent_tr_22_td_1_Template_td_mouseenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r12);\n      const ctx_r15 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r15.onMouseMove($event);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"span\", 16);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, MdbCalendarMonthViewComponent_tr_22_td_1_div_4_Template, 3, 11, \"div\", 17);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const day_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(5, _c4, day_r5.isToday, day_r5.isWeekend && !day_r5.isToday));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(8, _c6, day_r5.month !== ctx_r4.selectedMonth));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r5.dayNumber);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", day_r5.events)(\"ngForTrackBy\", ctx_r4.trackByEvent);\n  }\n}\n\nfunction MdbCalendarMonthViewComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, MdbCalendarMonthViewComponent_tr_22_td_1_Template, 5, 10, \"td\", 13);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const week_r3 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r3.week)(\"ngForTrackBy\", ctx_r1.trackByFn);\n  }\n}\n\nfunction MdbCalendarListViewComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"tr\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"th\", 14);\n    ɵngcc0.ɵɵelement(3, \"mdb-icon\", 15);\n    ɵngcc0.ɵɵtext(4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(5, \"th\", 16);\n    ɵngcc0.ɵɵelement(6, \"mdb-icon\", 17);\n    ɵngcc0.ɵɵtext(7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(8, \"tr\", 18);\n    ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_ng_container_20_Template_tr_click_8_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3);\n      const event_r1 = restoredCtx.$implicit;\n      const ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.onEventClick(event_r1);\n    });\n    ɵngcc0.ɵɵelementStart(9, \"td\", 19);\n    ɵngcc0.ɵɵelement(10, \"mdb-icon\", 20);\n    ɵngcc0.ɵɵtext(11);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const event_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", event_r1.start.date, \" - \", event_r1.end.date, \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", event_r1.start.time, \" - \", event_r1.end.time, \" \");\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵclassMapInterpolate1(\"pr-1 text-\", event_r1.color, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"\", event_r1.name, \" \");\n  }\n}\n\nlet EventModalComponent = /*#__PURE__*/(() => {\n  class EventModalComponent {\n    constructor(modalRef) {\n      this.modalRef = modalRef;\n      this.eventData = new Subject();\n      this.eventDeleted = new Subject();\n    }\n\n    getParsedValues(eventData) {\n      const id = this.event.id;\n      const name = eventData.name;\n      const startDate = parse(eventData.startDate.replace(', ', 'T'));\n      const endDate = parse(eventData.endDate.replace(', ', 'T'));\n      const color = eventData.color;\n      return {\n        id,\n        name,\n        startDate,\n        endDate,\n        color\n      };\n    }\n\n    ngOnInit() {\n      if (this.event && this.mode === 'edit') {\n        this.eventForm = new FormGroup({\n          name: new FormControl({\n            value: this.event.name,\n            disabled: !this.editable\n          }),\n          startDate: new FormControl({\n            value: this.event.startDate,\n            disabled: !this.editable\n          }),\n          endDate: new FormControl({\n            value: this.event.endDate,\n            disabled: !this.editable\n          }),\n          color: new FormControl({\n            value: this.event.color,\n            disabled: !this.editable\n          })\n        });\n      } else {\n        this.eventForm = new FormGroup({\n          name: new FormControl('New event'),\n          startDate: new FormControl(this.event.startDate),\n          endDate: new FormControl(this.event.endDate),\n          color: new FormControl(this.event.color)\n        });\n      }\n    }\n\n    onSave() {\n      const event = this.getParsedValues(this.eventForm.value);\n      this.eventData.next(event);\n      this.modalRef.hide();\n    }\n\n    onDelete() {\n      const event = this.getParsedValues(this.eventForm.value);\n      this.eventDeleted.next(event);\n      this.modalRef.hide();\n    }\n\n  }\n\n  EventModalComponent.ɵfac = function EventModalComponent_Factory(t) {\n    return new (t || EventModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MDBModalRef));\n  };\n\n  EventModalComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: EventModalComponent,\n    selectors: [[\"mdb-event-modal\"]],\n    decls: 50,\n    vars: 4,\n    consts: [[1, \"modal-content\"], [1, \"modal-header\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"close\", \"pull-right\", 3, \"click\"], [\"aria-hidden\", \"true\"], [\"id\", \"myModalLabel\", 1, \"modal-title\", \"w-100\"], [1, \"modal-body\"], [3, \"formGroup\"], [1, \"md-form\"], [\"type\", \"text\", \"mdbInput\", \"\", \"formControlName\", \"name\", 1, \"form-control\", \"w-100\"], [\"type\", \"text\", \"mdbInput\", \"\", \"formControlName\", \"startDate\", 1, \"form-control\", \"w-100\"], [\"type\", \"text\", \"mdbInput\", \"\", \"formControlName\", \"endDate\", 1, \"form-control\", \"w-100\"], [1, \"custom-control\", \"custom-radio\", \"custom-control-inline\", \"font-weight-bold\"], [\"type\", \"radio\", \"checked\", \"\", \"value\", \"info\", \"name\", \"color\", \"id\", \"info\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"info\", 1, \"custom-control-label\", \"text-info\"], [\"type\", \"radio\", \"value\", \"success\", \"name\", \"color\", \"id\", \"success\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"success\", 1, \"custom-control-label\", \"text-success\"], [\"type\", \"radio\", \"value\", \"warning\", \"name\", \"color\", \"id\", \"warning\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"warning\", 1, \"custom-control-label\", \"text-warning\"], [\"type\", \"radio\", \"value\", \"danger\", \"name\", \"color\", \"id\", \"danger\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"danger\", 1, \"custom-control-label\", \"text-danger\"], [\"type\", \"radio\", \"value\", \"primary\", \"name\", \"color\", \"id\", \"primary\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"primary\", 1, \"custom-control-label\", \"text-primary\"], [\"type\", \"radio\", \"value\", \"secondary\", \"name\", \"color\", \"id\", \"secondary\", \"formControlName\", \"color\", 1, \"custom-control-input\"], [\"for\", \"secondary\", 1, \"custom-control-label\", \"text-secondary\"], [\"class\", \"modal-footer\", 4, \"ngIf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"mdbBtn\", \"\", \"color\", \"danger\", \"aria-label\", \"Close\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", 3, \"click\"], [\"type\", \"button\", \"mdbBtn\", \"\", \"color\", \"primary\", \"mdbWavesEffect\", \"\", 1, \"relative\", \"waves-light\", 3, \"click\"], [\"type\", \"button\", \"mdbBtn\", \"\", \"color\", \"secondary\", \"aria-label\", \"Close\", \"mdbWavesEffect\", \"\", 1, \"waves-light\", 3, \"click\"]],\n    template: function EventModalComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"button\", 2);\n        ɵngcc0.ɵɵlistener(\"click\", function EventModalComponent_Template_button_click_2_listener() {\n          return ctx.modalRef.hide();\n        });\n        ɵngcc0.ɵɵelementStart(3, \"span\", 3);\n        ɵngcc0.ɵɵtext(4, \"\\u00D7\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"h4\", 4);\n        ɵngcc0.ɵɵtext(6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 5);\n        ɵngcc0.ɵɵelementStart(8, \"form\", 6);\n        ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n        ɵngcc0.ɵɵelement(10, \"input\", 8);\n        ɵngcc0.ɵɵelementStart(11, \"label\");\n        ɵngcc0.ɵɵtext(12, \"Name\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(13, \"div\", 7);\n        ɵngcc0.ɵɵelement(14, \"input\", 9);\n        ɵngcc0.ɵɵelementStart(15, \"label\");\n        ɵngcc0.ɵɵtext(16, \"Start date\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(17, \"div\", 7);\n        ɵngcc0.ɵɵelement(18, \"input\", 10);\n        ɵngcc0.ɵɵelementStart(19, \"label\");\n        ɵngcc0.ɵɵtext(20, \"End date\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"p\");\n        ɵngcc0.ɵɵtext(22, \"Color\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(23, \"div\");\n        ɵngcc0.ɵɵelementStart(24, \"div\", 11);\n        ɵngcc0.ɵɵelement(25, \"input\", 12);\n        ɵngcc0.ɵɵelementStart(26, \"label\", 13);\n        ɵngcc0.ɵɵtext(27, \"Info\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(28, \"div\", 11);\n        ɵngcc0.ɵɵelement(29, \"input\", 14);\n        ɵngcc0.ɵɵelementStart(30, \"label\", 15);\n        ɵngcc0.ɵɵtext(31, \"Success\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(32, \"div\", 11);\n        ɵngcc0.ɵɵelement(33, \"input\", 16);\n        ɵngcc0.ɵɵelementStart(34, \"label\", 17);\n        ɵngcc0.ɵɵtext(35, \"Warning\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(36, \"div\", 11);\n        ɵngcc0.ɵɵelement(37, \"input\", 18);\n        ɵngcc0.ɵɵelementStart(38, \"label\", 19);\n        ɵngcc0.ɵɵtext(39, \"Danger\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(40, \"div\", 11);\n        ɵngcc0.ɵɵelement(41, \"input\", 20);\n        ɵngcc0.ɵɵelementStart(42, \"label\", 21);\n        ɵngcc0.ɵɵtext(43, \"Primary\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(44, \"div\", 11);\n        ɵngcc0.ɵɵelement(45, \"input\", 22);\n        ɵngcc0.ɵɵelementStart(46, \"label\", 23);\n        ɵngcc0.ɵɵtext(47, \"Secondary\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(48, EventModalComponent_div_48_Template, 5, 2, \"div\", 24);\n        ɵngcc0.ɵɵtemplate(49, EventModalComponent_div_49_Template, 5, 2, \"div\", 24);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(6);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.title, \"\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"formGroup\", ctx.eventForm);\n        ɵngcc0.ɵɵadvance(40);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.mode === \"edit\" && ctx.editable);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.mode === \"add\");\n      }\n    },\n    directives: [ɵngcc2.ɵNgNoValidate, ɵngcc2.NgControlStatusGroup, ɵngcc2.FormGroupDirective, ɵngcc2.DefaultValueAccessor, ɵngcc1.MdbInput, ɵngcc2.NgControlStatus, ɵngcc2.FormControlName, ɵngcc2.RadioControlValueAccessor, ɵngcc3.NgIf, ɵngcc1.MdbBtnDirective],\n    styles: [\"\"]\n  });\n  return EventModalComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nvar CalendarView = /*#__PURE__*/(() => {\n  (function (CalendarView) {\n    CalendarView[\"month\"] = \"month\";\n    CalendarView[\"week\"] = \"week\";\n    CalendarView[\"list\"] = \"list\";\n  })(CalendarView || (CalendarView = {}));\n\n  return CalendarView;\n})();\nlet MdbCalendarComponent = /*#__PURE__*/(() => {\n  class MdbCalendarComponent {\n    constructor(modalService) {\n      this.modalService = modalService;\n      this.weekDaysDefault = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      this.weekDaysShortDefault = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n      this.monthsDefault = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n      this.monthsShortDefault = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n      this.calendarOptions = {\n        firstDayOfWeek: 'Sunday',\n        monthViewBtnTxt: 'Month',\n        weekViewBtnTxt: 'Week',\n        listViewBtnTxt: 'List',\n        todayBtnTxt: 'Today',\n        eventAddTitle: 'Add new event',\n        eventEditTitle: 'Edit event',\n        eventCancelBtnTxt: 'Cancel',\n        eventAddBtnTxt: 'Add',\n        eventEditBtnTxt: 'Edit',\n        eventDeleteBtnTxt: 'Delete'\n      };\n      this.dayLabels = [];\n      this.dayLabelsShort = [];\n      this.startDate = new Date();\n      this.events = [];\n      this.editable = true;\n      this.weekDays = this.weekDaysDefault;\n      this.weekDaysShort = this.weekDaysShortDefault;\n      this.months = this.monthsDefault;\n      this.monthsShort = this.monthsShortDefault;\n      this.eventDeleted = new EventEmitter();\n      this.eventEdited = new EventEmitter();\n      this.eventAdded = new EventEmitter();\n      this.monthChanged = new EventEmitter();\n      this.weekChanged = new EventEmitter();\n      this.listChanged = new EventEmitter();\n      this.viewChanged = new EventEmitter();\n      this.MS_IN_DAY = 24 * 60 * 60 * 1000;\n      this.view = CalendarView;\n      this.currentView = this.view.month;\n      this._isInitialized = false;\n    }\n\n    ngOnInit() {\n      this.calendarOptions = this.options ? Object.assign(this.calendarOptions, this.options) : this.calendarOptions;\n\n      this._changeDaysOrder();\n\n      if (this.defaultView) {\n        this.onViewChange(this.defaultView);\n      }\n\n      this._isInitialized = true;\n    }\n\n    _changeDaysOrder() {\n      const dayIndex = this.weekDayIndex = this.weekDaysDefault.indexOf(this.calendarOptions.firstDayOfWeek);\n\n      if (dayIndex !== -1) {\n        let index = dayIndex;\n\n        for (let i = 0; i < this.weekDays.length; i++) {\n          this.dayLabels.push(this.weekDays[index]);\n          this.dayLabelsShort.push(this.weekDaysShort[index]);\n          index = this.weekDaysDefault[index] === 'Saturday' ? 0 : index + 1;\n        }\n      }\n    }\n\n    getFormattedEvent(event) {\n      return {\n        id: event.id,\n        name: event.name,\n        startDate: format(event.startDate, 'YYYY-MM-DD, HH:mm:ss'),\n        endDate: format(event.endDate, 'YYYY-MM-DD, HH:mm:ss'),\n        color: event.color\n      };\n    }\n\n    formatDate(date) {\n      const year = getYear(date);\n      const month = getMonth(date);\n      const day = getDate(date);\n    }\n\n    onDayClick(day) {\n      if (this.editable) {\n        this.openAddModal(day);\n      }\n    }\n\n    onEventClick(event) {\n      this.openEditModal(event);\n    }\n\n    onViewChange(view) {\n      this.currentView = this.view[view];\n      this.viewChanged.emit(view);\n    }\n\n    onMonthChange(event) {\n      this.monthChanged.emit(event);\n    }\n\n    onWeekChange(event) {\n      this.weekChanged.emit(event);\n    }\n\n    onListChange(event) {\n      this.listChanged.emit(event);\n    }\n\n    openAddModal(event) {\n      const data = {\n        title: this.calendarOptions.eventAddTitle,\n        actionBtn: this.calendarOptions.eventAddBtnTxt,\n        cancelBtn: this.calendarOptions.eventCancelBtnTxt,\n        mode: 'add',\n        editable: this.editable,\n        event: this.getFormattedEvent(event)\n      };\n      this.modalRef = this.modalService.show(EventModalComponent, {\n        data\n      });\n      this.modalRef.content.eventData.pipe(take(1)).subscribe(newEvent => {\n        this.eventAdded.emit(newEvent);\n      });\n    }\n\n    openEditModal(event) {\n      const data = {\n        title: this.calendarOptions.eventEditTitle,\n        actionBtn: this.calendarOptions.eventEditBtnTxt,\n        cancelBtn: this.calendarOptions.eventDeleteBtnTxt,\n        mode: 'edit',\n        editable: this.editable,\n        event: event\n      };\n      this.modalRef = this.modalService.show(EventModalComponent, {\n        data\n      });\n      this.modalRef.content.eventData.pipe(take(1)).subscribe(editedEvent => {\n        this.eventEdited.emit(editedEvent);\n      });\n      this.modalRef.content.eventDeleted.pipe(take(1)).subscribe(deletedEvent => {\n        this.eventDeleted.emit(deletedEvent);\n      });\n    }\n\n  }\n\n  MdbCalendarComponent.ɵfac = function MdbCalendarComponent_Factory(t) {\n    return new (t || MdbCalendarComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MDBModalService));\n  };\n\n  MdbCalendarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCalendarComponent,\n    selectors: [[\"mdb-calendar\"]],\n    inputs: {\n      startDate: \"startDate\",\n      events: \"events\",\n      editable: \"editable\",\n      weekDays: \"weekDays\",\n      weekDaysShort: \"weekDaysShort\",\n      months: \"months\",\n      monthsShort: \"monthsShort\",\n      options: \"options\",\n      defaultView: \"defaultView\"\n    },\n    outputs: {\n      eventDeleted: \"eventDeleted\",\n      eventEdited: \"eventEdited\",\n      eventAdded: \"eventAdded\",\n      monthChanged: \"monthChanged\",\n      weekChanged: \"weekChanged\",\n      listChanged: \"listChanged\",\n      viewChanged: \"viewChanged\"\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[1, \"mdb-calendar\", 3, \"ngSwitch\"], [3, \"initDate\", \"events\", \"options\", \"weekDaysShort\", \"weekDayIndex\", \"months\", \"dayClicked\", \"eventClicked\", \"viewChanged\", \"monthChanged\", 4, \"ngSwitchCase\"], [3, \"initDate\", \"events\", \"options\", \"weekDaysShort\", \"weekDayIndex\", \"monthsShort\", \"dateClicked\", \"eventClicked\", \"viewChanged\", \"weekChanged\", 4, \"ngSwitchCase\"], [3, \"initDate\", \"events\", \"options\", \"weekDayIndex\", \"monthsShort\", \"eventClicked\", \"viewChanged\", \"listChanged\", 4, \"ngSwitchCase\"], [3, \"initDate\", \"events\", \"options\", \"weekDaysShort\", \"weekDayIndex\", \"months\", \"dayClicked\", \"eventClicked\", \"viewChanged\", \"monthChanged\"], [3, \"initDate\", \"events\", \"options\", \"weekDaysShort\", \"weekDayIndex\", \"monthsShort\", \"dateClicked\", \"eventClicked\", \"viewChanged\", \"weekChanged\"], [3, \"initDate\", \"events\", \"options\", \"weekDayIndex\", \"monthsShort\", \"eventClicked\", \"viewChanged\", \"listChanged\"]],\n    template: function MdbCalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MdbCalendarComponent_mdb_calendar_month_view_1_Template, 1, 6, \"mdb-calendar-month-view\", 1);\n        ɵngcc0.ɵɵtemplate(2, MdbCalendarComponent_mdb_calendar_week_view_2_Template, 1, 6, \"mdb-calendar-week-view\", 2);\n        ɵngcc0.ɵɵtemplate(3, MdbCalendarComponent_mdb_calendar_list_view_3_Template, 1, 5, \"mdb-calendar-list-view\", 3);\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.currentView);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.view.month);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.view.week);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", ctx.view.list);\n      }\n    },\n    directives: function () {\n      return [ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, MdbCalendarMonthViewComponent, MdbCalendarWeekViewComponent, MdbCalendarListViewComponent];\n    },\n    styles: [\"@media (max-width: 992px){  .mdb-calendar-tools{flex-direction:column}  .mdb-calendar-tools .mdb-calendar-heading{text-align:center;order:-1}  .mdb-calendar-tools>.btn-group{transform:scale(.9)}}\"]\n  });\n  return MdbCalendarComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nconst MS_IN_DAY = 24 * 60 * 60 * 1000;\nconst MS_IN_HOUR = 60 * 60 * 1000;\n\nfunction getPeriodEvents(events, start, end) {\n  return events.filter(event => {\n    if (event.startDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.endDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.startDate <= start && event.endDate >= end) {\n      return true;\n    }\n\n    return false;\n  });\n}\n\nfunction getMonthDayEvents(events, start, end) {\n  return events.filter(event => {\n    if (event.startDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.endDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.startDate <= start && event.endDate >= end) {\n      return true;\n    }\n\n    return false;\n  }).map(event => {\n    return Object.assign(Object.assign({}, event), {\n      startStr: format(event.startDate, 'YYYY-MM-DDTHH:mm:ss'),\n      endStr: format(event.endDate, 'YYYY-MM-DDTHH:mm:ss'),\n      eventStart: event.startDate >= start,\n      eventEnd: event.endDate <= end,\n      longEvent: event.endDate.getTime() - event.startDate.getTime() >= MS_IN_DAY\n    });\n  });\n}\n\nfunction getListViewEvents(events, start, end) {\n  return events.filter(event => {\n    if (event.startDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.endDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.startDate <= start && event.endDate >= end) {\n      return true;\n    }\n\n    if (event.startDate >= start && event.startDate <= end) {\n      return true;\n    }\n\n    return false;\n  }).map(event => {\n    return Object.assign(Object.assign({}, event), {\n      startStr: format(event.startDate, 'YYYY-MM-DDTHH:mm:ss'),\n      endStr: format(event.endDate, 'YYYY-MM-DDTHH:mm:ss'),\n      start: {\n        date: format(event.startDate, 'DD/MM/YYYY'),\n        time: format(event.startDate, 'h:mm:ss A')\n      },\n      end: {\n        date: format(event.endDate, 'DD/MM/YYYY'),\n        time: format(event.endDate, 'h:mm:ss A')\n      }\n    });\n  });\n}\n\nfunction getWeekDayEvents(events, start, end, dayStart, dayEnd) {\n  return events.filter(event => {\n    if (event.startDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.endDate >= start && event.endDate <= end) {\n      return true;\n    }\n\n    if (event.startDate <= start && event.endDate >= end) {\n      return true;\n    }\n\n    return false;\n  }).map(event => {\n    return Object.assign(Object.assign({}, event), {\n      startStr: format(event.startDate, 'YYYY-MM-DDTHH:mm:ss'),\n      endStr: format(event.endDate, 'YYYY-MM-DDTHH:mm:ss'),\n      allDay: event.startDate <= dayStart && event.endDate.getTime() >= dayEnd.getTime() - 999\n    });\n  });\n}\n\nfunction getWeekHourEvents(events, start, end, dayStart, dayEnd) {\n  return getWeekDayEvents(events, start, end, dayStart, dayEnd).filter(event => !event.allDay).map(event => {\n    return Object.assign(Object.assign({}, event), {\n      eventStart: event.startDate >= start,\n      eventEnd: event.endDate <= end,\n      longEvent: event.endDate.getTime() - event.startDate.getTime() >= MS_IN_HOUR\n    });\n  });\n}\n\nfunction getWeekAllDayEvents(events, start, end, dayStart, dayEnd) {\n  return getWeekDayEvents(events, start, end, dayStart, dayEnd).filter(event => event.allDay).map(event => {\n    return Object.assign(Object.assign({}, event), {\n      eventStart: event.startDate >= dayStart,\n      eventEnd: event.endDate <= dayEnd,\n      longEvent: event.endDate.getTime() - event.startDate.getTime() >= MS_IN_DAY\n    });\n  });\n}\n\nlet MdbCalendarWeekViewComponent = /*#__PURE__*/(() => {\n  class MdbCalendarWeekViewComponent {\n    constructor(renderer) {\n      this.renderer = renderer;\n      this.weekDaysShort = [];\n      this.monthsShort = [];\n      this.weekDayIndex = 0;\n      this.dateClicked = new EventEmitter();\n      this.eventClicked = new EventEmitter();\n      this.viewChanged = new EventEmitter();\n      this.weekChanged = new EventEmitter();\n      this.dayCells = [];\n      this.fullDayCells = [];\n      this.columns = [];\n      this._isInitialized = false;\n    }\n\n    get initDate() {\n      return this._initDate;\n    }\n\n    set initDate(date) {\n      this._initDate = date;\n\n      if (this._isInitialized) {\n        const initDay = this.initDay = startOfWeek(startOfDay(date), {\n          weekStartsOn: this.weekDayIndex\n        });\n        this.weekView = this.createWeekView(initDay);\n      }\n    }\n\n    get events() {\n      return this._events;\n    }\n\n    set events(events) {\n      this._events = events;\n      this.weekView = this.createWeekView(this.initDay);\n    }\n\n    ngOnInit() {\n      const initDay = this.initDay = startOfWeek(startOfDay(this.initDate), {\n        weekStartsOn: this.weekDayIndex\n      });\n      this.weekView = this.createWeekView(initDay);\n      this._isInitialized = true;\n    }\n\n    ngAfterViewInit() {\n      this.fullDayCells = this.fullDays.toArray().map(el => el.nativeElement);\n      this.dayCells = this.days.toArray().map(el => el.nativeElement);\n\n      for (let i = 1; i <= 7; i++) {\n        this.dayCells.forEach(row => {\n          this.columns.push(row.children[i]);\n        });\n      }\n    }\n\n    trackByFn(index) {\n      return index;\n    }\n\n    previous() {\n      this.initDay = subDays(this.initDay, 7);\n      this.weekView = this.createWeekView(this.initDay);\n      this.weekChanged.emit({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n\n    next() {\n      this.initDay = addDays(this.initDay, 7);\n      this.weekView = this.createWeekView(this.initDay);\n      this.weekChanged.emit({\n        startDate: this.initDay,\n        endDate: this.endDate\n      });\n    }\n\n    goToToday() {\n      this.initDay = startOfWeek(startOfDay(new Date()), {\n        weekStartsOn: this.weekDayIndex\n      });\n      this.weekView = this.createWeekView(this.initDay);\n      this.weekChanged.emit({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n\n    fullDayMouseDown(event, day) {\n      if (this.dayEditing) {\n        return;\n      }\n\n      this.fullDayEditing = true;\n      this.dragStart = this.fullDayCells.indexOf(event.target);\n      this.isDragging = true;\n      this.fullDaySelectionStart = day.startDate;\n    }\n\n    fullDayMouseUp(event, day) {\n      this.dragEnd = this.fullDayCells.indexOf(event.target);\n      this.fullDaySelectionEnd = day.endDate;\n      this.fullDayEditing = false;\n      const calendarEvent = {\n        name: 'New event',\n        startDate: this.fullDaySelectionStart,\n        endDate: this.fullDaySelectionEnd,\n        color: 'info'\n      };\n\n      if (this.dragStart !== this.dragEnd) {\n        this.dateClicked.emit(calendarEvent);\n      }\n\n      this.isDragging = false;\n\n      if (this.dragEnd !== 0) {\n        this.fullDaySelectRange();\n      }\n\n      this.fullDayClearSelection();\n    }\n\n    fullDaySelectRange() {\n      this.fullDayClearSelection();\n\n      if (this.dragEnd > this.dragStart) {\n        if (this.dragEnd + 1 < this.dragStart) {\n          this.fullDayCells.slice(this.dragEnd, this.dragStart + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        } else {\n          this.fullDayCells.slice(this.dragStart, this.dragEnd + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        }\n      }\n    }\n\n    fullDayClearSelection() {\n      this.fullDayCells.forEach(cell => this.renderer.removeStyle(cell, 'background-color'));\n    }\n\n    fullDayMouseMove(event) {\n      event.preventDefault();\n\n      if (this.dayEditing) {\n        return;\n      }\n\n      if (this.isDragging) {\n        this.dragEnd = this.fullDayCells.indexOf(event.target);\n        this.fullDaySelectRange();\n      }\n    }\n\n    onMouseDown(event, day) {\n      if (this.fullDayEditing) {\n        return;\n      }\n\n      this.dayEditing = true;\n      this.dragStart = this.columns.indexOf(event.target);\n      this.isDragging = true;\n      this.selectionStartDate = day.startDate;\n    }\n\n    onMouseUp(event, day) {\n      this.dragEnd = this.columns.indexOf(event.target);\n      this.selectionEndDate = day.endDate;\n      this.dayEditing = false;\n      const calendarEvent = {\n        name: 'New event',\n        startDate: new Date(this.selectionStartDate),\n        endDate: new Date(this.selectionEndDate),\n        color: 'info'\n      };\n\n      if (this.dragStart !== this.dragEnd) {\n        this.dateClicked.emit(calendarEvent);\n      }\n\n      this.isDragging = false;\n\n      if (this.dragEnd !== 0) {\n        this.selectRange();\n      }\n\n      this.clearSelection();\n    }\n\n    selectRange() {\n      this.clearSelection();\n\n      if (this.dragEnd > this.dragStart) {\n        if (this.dragEnd + 1 < this.dragStart) {\n          this.columns.slice(this.dragEnd, this.dragStart + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        } else {\n          this.columns.slice(this.dragStart, this.dragEnd + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        }\n      }\n    }\n\n    clearSelection() {\n      this.columns.forEach(cell => this.renderer.removeStyle(cell, 'background-color'));\n    }\n\n    onMouseMove(event) {\n      event.preventDefault();\n\n      if (this.fullDayEditing) {\n        return;\n      }\n\n      if (this.isDragging) {\n        this.dragEnd = this.columns.indexOf(event.target);\n        this.selectRange();\n      }\n    }\n\n    onEventClick(event) {\n      const eventCopy = {\n        id: event.id,\n        name: event.name,\n        startDate: format(event.startDate, 'YYYY-MM-DD, HH:mm:ss'),\n        endDate: format(event.endDate, 'YYYY-MM-DD, HH:mm:ss'),\n        color: event.color\n      };\n      this.eventClicked.emit(eventCopy);\n    }\n\n    onDateClick(date) {\n      const newEvent = {\n        name: 'New event',\n        startDate: date.startDate,\n        endDate: date.endDate,\n        color: 'info'\n      };\n      this.dateClicked.emit(newEvent);\n    }\n\n    onViewChange(view) {\n      this.viewChanged.emit(view);\n    }\n\n    createWeekView(initDate) {\n      const firstDay = initDate;\n      const lastDay = addDays(firstDay, 6);\n      this.startDate = firstDay;\n      this.endDate = lastDay;\n      const period = {\n        start: `${getDate(firstDay)} ${this.monthsShort[getMonth(firstDay)]}, ${getYear(firstDay)}`,\n        end: `${getDate(lastDay)} ${this.monthsShort[getMonth(lastDay)]}, ${getYear(lastDay)}`\n      };\n      const allDayRow = [];\n      const weekRows = [];\n      let row = [];\n      let date;\n      let month;\n      let year;\n      let day;\n      let dayNumber;\n      let startDate;\n      let endDate;\n      let dayStart;\n      let dayEnd;\n\n      for (let i = 0; i < 24; i++) {\n        row = [];\n\n        for (let j = 0; j < 7; j++) {\n          date = addDays(firstDay, j);\n          month = getMonth(date) + 1;\n          year = getYear(date);\n          day = this.weekDaysShort[getDay(date)];\n          dayNumber = getDate(date);\n          startDate = addHours(startOfDay(date), i);\n          endDate = addMinutes(startDate, 59.99);\n          dayStart = startOfDay(date);\n          dayEnd = endOfDay(date);\n          row.push({\n            startDate: startDate,\n            endDate: endDate,\n            isToday: isToday(date),\n            isWeekend: isWeekend(date),\n            events: getWeekHourEvents(this.events, startDate, endDate, dayStart, dayEnd)\n          });\n\n          if (i === 1) {\n            allDayRow.push({\n              startDate: dayStart,\n              endDate: dayEnd,\n              isToday: isToday(date),\n              isWeekend: isWeekend(date),\n              day: day,\n              dayNumber: dayNumber,\n              month: month,\n              events: getWeekAllDayEvents(this.events, dayStart, dayEnd, dayStart, dayEnd)\n            });\n          }\n        }\n\n        weekRows.push({\n          row\n        });\n      }\n\n      return {\n        allDayRow,\n        weekRows,\n        period\n      };\n    }\n\n  }\n\n  MdbCalendarWeekViewComponent.ɵfac = function MdbCalendarWeekViewComponent_Factory(t) {\n    return new (t || MdbCalendarWeekViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCalendarWeekViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCalendarWeekViewComponent,\n    selectors: [[\"mdb-calendar-week-view\"]],\n    viewQuery: function MdbCalendarWeekViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.days = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.fullDays = _t);\n      }\n    },\n    inputs: {\n      weekDaysShort: \"weekDaysShort\",\n      monthsShort: \"monthsShort\",\n      weekDayIndex: \"weekDayIndex\",\n      initDate: \"initDate\",\n      events: \"events\",\n      options: \"options\"\n    },\n    outputs: {\n      dateClicked: \"dateClicked\",\n      eventClicked: \"eventClicked\",\n      viewChanged: \"viewChanged\",\n      weekChanged: \"weekChanged\"\n    },\n    decls: 28,\n    vars: 12,\n    consts: [[1, \"mdb-week-view\"], [1, \"mdb-calendar-tools\", \"d-flex\", \"justify-content-between\", \"mb-3\"], [\"role\", \"group\", 1, \"btn-group\", \"btn-group-sm\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-previous-btn\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-left\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-next-btn\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-right\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-today-btn\", \"px-4\", 3, \"click\"], [1, \"mdb-calendar-heading\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-month-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-week-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-list-btn\", \"px-4\", 3, \"click\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\", \"click\", \"mousedown\", \"mouseup\", \"mouseenter\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\"], [3, \"ngClass\", \"click\", \"mousedown\", \"mouseup\", \"mouseenter\"], [\"fullDayEl\", \"\"], [\"placement\", \"top\", 3, \"class\", \"ngClass\", \"mdbTooltip\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"placement\", \"top\", 3, \"ngClass\", \"mdbTooltip\", \"click\"], [\"dayEl\", \"\"], [3, \"ngClass\", \"mousedown\", \"mouseup\", \"mouseenter\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\", \"mousedown\", \"mouseup\", \"mouseenter\", \"click\"], [\"placement\", \"top\", 3, \"class\", \"mdbTooltip\", \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"placement\", \"top\", 3, \"mdbTooltip\", \"ngClass\", \"click\"]],\n    template: function MdbCalendarWeekViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_3_listener() {\n          return ctx.previous();\n        });\n        ɵngcc0.ɵɵelement(4, \"mdb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_5_listener() {\n          return ctx.next();\n        });\n        ɵngcc0.ɵɵelement(6, \"mdb-icon\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"button\", 7);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_7_listener() {\n          return ctx.goToToday();\n        });\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"h2\", 8);\n        ɵngcc0.ɵɵtext(10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(12, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_12_listener() {\n          return ctx.onViewChange(\"month\");\n        });\n        ɵngcc0.ɵɵtext(13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(14, \"button\", 10);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_14_listener() {\n          return ctx.onViewChange(\"week\");\n        });\n        ɵngcc0.ɵɵtext(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(16, \"button\", 11);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarWeekViewComponent_Template_button_click_16_listener() {\n          return ctx.onViewChange(\"list\");\n        });\n        ɵngcc0.ɵɵtext(17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(18, \"table\");\n        ɵngcc0.ɵɵelementStart(19, \"thead\");\n        ɵngcc0.ɵɵelement(20, \"th\");\n        ɵngcc0.ɵɵtemplate(21, MdbCalendarWeekViewComponent_th_21_Template, 2, 7, \"th\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(22, \"tbody\");\n        ɵngcc0.ɵɵelementStart(23, \"tr\");\n        ɵngcc0.ɵɵelementStart(24, \"th\");\n        ɵngcc0.ɵɵtext(25, \"All day\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(26, MdbCalendarWeekViewComponent_td_26_Template, 3, 5, \"td\", 13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(27, MdbCalendarWeekViewComponent_tr_27_Template, 5, 3, \"tr\", 14);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(8);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.todayBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate2(\"\", ctx.weekView.period.start, \" - \", ctx.weekView.period.end, \"\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.monthViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.weekViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.listViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekView.allDayRow)(\"ngForTrackBy\", ctx.trackByFn);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekView.allDayRow)(\"ngForTrackBy\", ctx.trackByFn);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekView.weekRows)(\"ngForTrackBy\", ctx.trackByFn);\n      }\n    },\n    directives: [ɵngcc1.MdbBtnDirective, ɵngcc1.MdbIconComponent, ɵngcc1.FasDirective, ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc1.TooltipDirective],\n    styles: [\".mdb-today-cell[_ngcontent-%COMP%]{background-color:#e1f5fe}.mdb-week-view[_ngcontent-%COMP%]{width:100%;height:100%;margin-bottom:50px}.mdb-week-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{table-layout:fixed;width:100%}.mdb-week-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{text-align:center!important;height:30px;font-weight:700;border:1px solid #ddd;-webkit-user-select:none;-moz-user-select:none;user-select:none}.mdb-week-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{vertical-align:top;cursor:pointer;border:1px solid #ddd;-webkit-user-select:none;-moz-user-select:none;user-select:none}.mdb-vertical-single-event[_ngcontent-%COMP%]{margin:2px 1px;float:left;width:17px;height:84px}.mdb-vertical-event-start[_ngcontent-%COMP%]{margin:2px 1px -2px;float:left;width:17px;height:88px}.mdb-vertical-event-start[_ngcontent-%COMP%]   span[_ngcontent-%COMP%], .mdb-vertical-single-event[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{display:block;transform:rotate(90deg);white-space:nowrap}.mdb-vertical-event-end[_ngcontent-%COMP%]{margin:-2px 1px 2px;float:left;width:17px;height:88px;text-indent:-9999px}.mdb-vertical-event-long[_ngcontent-%COMP%]{margin:-2px 1px;float:left;width:17px;height:92px;text-indent:-9999px}.mdb-event[_ngcontent-%COMP%]{cursor:pointer;font-weight:700;text-align:left!important}.mdb-event-start[_ngcontent-%COMP%]{margin:1px -2px 1px 2px}.mdb-event-end[_ngcontent-%COMP%]{margin:1px 2px 1px -2px;text-indent:-9999px}.mdb-event-long[_ngcontent-%COMP%]{margin:1px -2px;text-indent:-9999px}.mdb-event-single[_ngcontent-%COMP%]{margin:1px 2px}\"]\n  });\n  return MdbCalendarWeekViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbCalendarMonthViewComponent = /*#__PURE__*/(() => {\n  class MdbCalendarMonthViewComponent {\n    constructor(renderer) {\n      this.renderer = renderer;\n      this.weekDayIndex = 0;\n      this.dayClicked = new EventEmitter();\n      this.eventClicked = new EventEmitter();\n      this.viewChanged = new EventEmitter();\n      this.monthChanged = new EventEmitter();\n      this.allCells = [];\n      this.dates = [];\n      this._isInitialized = false;\n    }\n\n    get initDate() {\n      return this._initDate;\n    }\n\n    set initDate(date) {\n      this._initDate = date;\n\n      if (this._isInitialized) {\n        const currentYear = date.getFullYear();\n        const currentMonth = date.getMonth();\n        this.createMonthView(currentYear, currentMonth);\n      }\n    }\n\n    get events() {\n      return this._events;\n    }\n\n    set events(events) {\n      this._events = events;\n      this.dates.forEach(week => {\n        week.week.forEach(day => {\n          day.events = getMonthDayEvents(events, day.startOfDay, day.endOfDay);\n        });\n      });\n    }\n\n    ngOnInit() {\n      const currentYear = this.initDate.getFullYear();\n      const currentMonth = this.initDate.getMonth();\n      this.createMonthView(currentYear, currentMonth);\n      this._isInitialized = true;\n    }\n\n    ngAfterViewInit() {\n      this.allCells = this.days.toArray().map(el => el.nativeElement);\n    }\n\n    trackByFn(index) {\n      return index;\n    }\n\n    trackByEvent(index, item) {\n      return item.id;\n    }\n\n    trackByDay(index, item) {\n      return item.dayNumber;\n    }\n\n    onMouseDown(event, day) {\n      this.dragStart = this.allCells.indexOf(event.target);\n      this.isDragging = true;\n      this.selectionStartDate = day.startOfDay;\n    }\n\n    onMouseUp(event, day) {\n      this.dragEnd = this.allCells.indexOf(event.target);\n      this.selectionEndDate = day.endOfDay;\n      const calendarEvent = {\n        name: 'New event',\n        startDate: this.selectionStartDate,\n        endDate: this.selectionEndDate,\n        color: 'info'\n      };\n\n      if (this.dragStart !== this.dragEnd) {\n        this.dayClicked.emit(calendarEvent);\n      }\n\n      this.isDragging = false;\n\n      if (this.dragEnd !== 0) {\n        this.selectRange();\n      }\n\n      this.clearSelection();\n    }\n\n    selectRange() {\n      this.clearSelection();\n\n      if (this.dragEnd > this.dragStart) {\n        if (this.dragEnd + 1 < this.dragStart) {\n          this.allCells.slice(this.dragEnd, this.dragStart + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        } else {\n          this.allCells.slice(this.dragStart, this.dragEnd + 1).forEach(cell => this.renderer.setStyle(cell, 'background-color', 'rgba(69,82,110,.3)'));\n        }\n      }\n    }\n\n    clearSelection() {\n      this.allCells.forEach(cell => this.renderer.removeStyle(cell, 'background-color'));\n    }\n\n    onMouseMove(event) {\n      event.preventDefault();\n\n      if (this.isDragging) {\n        this.dragEnd = this.allCells.indexOf(event.target);\n        this.selectRange();\n      }\n    }\n\n    onDayClick(day) {\n      const newEvent = {\n        name: 'New event',\n        startDate: day.startOfDay,\n        endDate: day.endOfDay,\n        color: 'info'\n      };\n      this.dayClicked.emit(newEvent);\n    }\n\n    onEventClick(event) {\n      const eventCopy = {\n        id: event.id,\n        name: event.name,\n        startDate: format(event.startDate, 'YYYY-MM-DD, HH:mm:ss'),\n        endDate: format(event.endDate, 'YYYY-MM-DD, HH:mm:ss'),\n        color: event.color\n      };\n      this.eventClicked.emit(eventCopy);\n    }\n\n    onViewChange(view) {\n      this.viewChanged.emit(view);\n    }\n\n    next() {\n      if (this.selectedMonth === 11) {\n        this.createMonthView(this.selectedYear + 1, 0);\n      } else {\n        this.createMonthView(this.selectedYear, this.selectedMonth + 1);\n      }\n\n      this.monthChanged.emit({\n        index: this.selectedMonth,\n        month: this.months[this.selectedMonth],\n        year: this.selectedYear\n      });\n    }\n\n    previous() {\n      if (this.selectedMonth === 0) {\n        this.createMonthView(this.selectedYear - 1, 11);\n      } else {\n        this.createMonthView(this.selectedYear, this.selectedMonth - 1);\n      }\n\n      this.monthChanged.emit({\n        index: this.selectedMonth,\n        month: this.months[this.selectedMonth],\n        year: this.selectedYear\n      });\n    }\n\n    goToToday() {\n      const today = new Date();\n      const currentYear = today.getFullYear();\n      const currentMonth = today.getMonth();\n      this.createMonthView(currentYear, currentMonth);\n      this.monthChanged.emit({\n        index: this.selectedMonth,\n        name: this.months[this.selectedMonth],\n        year: this.selectedYear\n      });\n    }\n\n    getDaysInPreviousMonth(year, month) {\n      if (month === -1) {\n        return getDaysInMonth(new Date(year - 1, 11));\n      }\n\n      return getDaysInMonth(new Date(year, month));\n    }\n\n    createMonthView(year, month) {\n      this.selectedMonth = month;\n      this.selectedYear = year;\n      const daysInMonth = getDaysInMonth(new Date(year, month));\n      const daysInPreviousMonth = this.getDaysInPreviousMonth(year, month - 1);\n      const firstDay = startOfWeek(new Date(year, month), {\n        weekStartsOn: this.weekDayIndex\n      });\n      const firstVisibleDay = getDate(firstDay);\n      let dayStart;\n      let dayEnd;\n      const dates = [];\n      let dayNumber = 1;\n      let monthNumber = month;\n\n      for (let i = 1; i < 7; i++) {\n        const week = [];\n\n        if (i === 1 && firstVisibleDay !== 1) {\n          for (let j = firstVisibleDay; j <= daysInPreviousMonth; j++) {\n            dayStart = startOfDay(new Date(year, month - 1, j));\n            dayEnd = endOfDay(new Date(year, month - 1, j));\n            week.push({\n              dayNumber: j,\n              isToday: false,\n              isWeekend: isWeekend(new Date(year, month - 1, j)),\n              month: month - 1,\n              startOfDay: startOfDay(new Date(year, month - 1, j)),\n              endOfDay: endOfDay(new Date(year, month - 1, j)),\n              events: getMonthDayEvents(this.events, dayStart, dayEnd)\n            });\n          }\n\n          const daysLeft = 7 - week.length;\n\n          for (let j = 0; j < daysLeft; j++) {\n            dayStart = startOfDay(new Date(year, month, dayNumber));\n            dayEnd = endOfDay(new Date(year, month, dayNumber));\n            week.push({\n              dayNumber: dayNumber,\n              isToday: isToday(new Date(year, month, dayNumber)),\n              isWeekend: isWeekend(new Date(year, month, dayNumber)),\n              month: month,\n              startOfDay: startOfDay(new Date(year, month, dayNumber)),\n              endOfDay: endOfDay(new Date(year, month, dayNumber)),\n              events: getMonthDayEvents(this.events, dayStart, dayEnd)\n            });\n            dayNumber++;\n          }\n        } else {\n          for (let j = 1; j < 8; j++) {\n            if (dayNumber > daysInMonth) {\n              dayNumber = 1;\n              monthNumber = month + 1;\n            }\n\n            dayStart = startOfDay(new Date(year, monthNumber, dayNumber));\n            dayEnd = endOfDay(new Date(year, monthNumber, dayNumber));\n            week.push({\n              dayNumber: dayNumber,\n              isToday: isToday(new Date(year, monthNumber, dayNumber)),\n              isWeekend: isWeekend(new Date(year, monthNumber, dayNumber)),\n              month: monthNumber,\n              startOfDay: startOfDay(new Date(year, monthNumber, dayNumber)),\n              endOfDay: endOfDay(new Date(year, monthNumber, dayNumber)),\n              events: getMonthDayEvents(this.events, dayStart, dayEnd)\n            });\n            dayNumber++;\n          }\n        }\n\n        dates.push({\n          week\n        });\n      }\n\n      this.dates = dates;\n    }\n\n  }\n\n  MdbCalendarMonthViewComponent.ɵfac = function MdbCalendarMonthViewComponent_Factory(t) {\n    return new (t || MdbCalendarMonthViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n\n  MdbCalendarMonthViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCalendarMonthViewComponent,\n    selectors: [[\"mdb-calendar-month-view\"]],\n    viewQuery: function MdbCalendarMonthViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.days = _t);\n      }\n    },\n    inputs: {\n      weekDayIndex: \"weekDayIndex\",\n      initDate: \"initDate\",\n      events: \"events\",\n      weekDaysShort: \"weekDaysShort\",\n      months: \"months\",\n      options: \"options\"\n    },\n    outputs: {\n      dayClicked: \"dayClicked\",\n      eventClicked: \"eventClicked\",\n      viewChanged: \"viewChanged\",\n      monthChanged: \"monthChanged\"\n    },\n    decls: 23,\n    vars: 10,\n    consts: [[1, \"mdb-month-view\"], [1, \"mdb-calendar-tools\", \"d-flex\", \"justify-content-between\", \"mb-3\"], [\"role\", \"group\", 1, \"btn-group\", \"btn-group-sm\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-previous-btn\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-left\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-next-btn\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-right\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-today-btn\", \"px-4\", 3, \"click\"], [1, \"mdb-calendar-heading\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-month-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-week-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-list-btn\", \"px-4\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\", \"click\", \"mousedown\", \"mouseup\", \"mouseenter\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"ngClass\", \"click\", \"mousedown\", \"mouseup\", \"mouseenter\"], [\"dayEl\", \"\"], [1, \"mdb-day-field\", 3, \"ngClass\"], [\"placement\", \"top\", 3, \"class\", \"ngClass\", \"mdbTooltip\", \"click\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"placement\", \"top\", 3, \"ngClass\", \"mdbTooltip\", \"click\"]],\n    template: function MdbCalendarMonthViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_3_listener() {\n          return ctx.previous();\n        });\n        ɵngcc0.ɵɵelement(4, \"mdb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_5_listener() {\n          return ctx.next();\n        });\n        ɵngcc0.ɵɵelement(6, \"mdb-icon\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"button\", 7);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_7_listener() {\n          return ctx.goToToday();\n        });\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"h2\", 8);\n        ɵngcc0.ɵɵtext(10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(12, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_12_listener() {\n          return ctx.onViewChange(\"month\");\n        });\n        ɵngcc0.ɵɵtext(13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(14, \"button\", 10);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_14_listener() {\n          return ctx.onViewChange(\"week\");\n        });\n        ɵngcc0.ɵɵtext(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(16, \"button\", 11);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarMonthViewComponent_Template_button_click_16_listener() {\n          return ctx.onViewChange(\"list\");\n        });\n        ɵngcc0.ɵɵtext(17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(18, \"table\");\n        ɵngcc0.ɵɵelementStart(19, \"thead\");\n        ɵngcc0.ɵɵtemplate(20, MdbCalendarMonthViewComponent_th_20_Template, 2, 1, \"th\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(21, \"tbody\");\n        ɵngcc0.ɵɵtemplate(22, MdbCalendarMonthViewComponent_tr_22_Template, 2, 2, \"tr\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(8);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.todayBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate2(\"\", ctx.months[ctx.selectedMonth], \" \", ctx.selectedYear, \"\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.monthViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.weekViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.listViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekDaysShort)(\"ngForTrackBy\", ctx.trackByFn);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dates)(\"ngForTrackBy\", ctx.trackByFn);\n      }\n    },\n    directives: [ɵngcc1.MdbBtnDirective, ɵngcc1.MdbIconComponent, ɵngcc1.FasDirective, ɵngcc3.NgForOf, ɵngcc3.NgClass, ɵngcc1.TooltipDirective],\n    styles: [\".mdb-today-cell[_ngcontent-%COMP%]{background-color:#e1f5fe}.mdb-month-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{table-layout:fixed;width:100%}.mdb-month-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{text-align:center!important;height:30px;font-weight:700;border:1px solid #ddd}.mdb-month-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{height:12vh;padding-top:25px;vertical-align:top;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;border:1px solid #ddd}.mdb-month-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:hover{background-color:#45526e0d!important}.mdb-day-field[_ngcontent-%COMP%]{position:absolute;right:8px;top:5px}.mdb-event[_ngcontent-%COMP%]{cursor:pointer;font-weight:700;text-align:left!important}.mdb-event-start[_ngcontent-%COMP%]{margin:1px -2px 1px 2px}.mdb-event-end[_ngcontent-%COMP%]{margin:1px 2px 1px -2px;text-indent:-9999px}.mdb-event-long[_ngcontent-%COMP%]{margin:1px -2px;text-indent:-9999px}.mdb-event-single[_ngcontent-%COMP%]{margin:1px 2px}\"]\n  });\n  return MdbCalendarMonthViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbCalendarListViewComponent = /*#__PURE__*/(() => {\n  class MdbCalendarListViewComponent {\n    constructor() {\n      this.monthsShort = [];\n      this.weekDayIndex = 0;\n      this.viewChanged = new EventEmitter();\n      this.eventClicked = new EventEmitter();\n      this.listChanged = new EventEmitter();\n      this._isInitialized = false;\n    }\n\n    get initDate() {\n      return this._initDate;\n    }\n\n    set initDate(date) {\n      this._initDate = date;\n\n      if (this._isInitialized) {\n        const initDay = this.initDay = startOfWeek(startOfDay(date), {\n          weekStartsOn: this.weekDayIndex\n        });\n        this.listView = this.createListView(initDay);\n      }\n    }\n\n    get events() {\n      return this._events;\n    }\n\n    set events(events) {\n      this._events = events;\n      this.listView = this.createListView(this.initDay);\n    }\n\n    ngOnInit() {\n      const initDay = this.initDay = startOfWeek(startOfDay(this.initDate), {\n        weekStartsOn: this.weekDayIndex\n      });\n      this.listView = this.createListView(initDay);\n      this._isInitialized = true;\n    }\n\n    previous() {\n      this.initDay = subDays(this.initDay, 7);\n      this.listView = this.createListView(this.initDay);\n      this.listChanged.emit({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n\n    next() {\n      this.initDay = addDays(this.initDay, 7);\n      this.listView = this.createListView(this.initDay);\n      this.listChanged.emit({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n\n    goToToday() {\n      this.initDay = startOfWeek(startOfDay(new Date()));\n      this.listView = this.createListView(this.initDay);\n      this.listChanged.emit({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n\n    onViewChange(view) {\n      this.viewChanged.emit(view);\n    }\n\n    trackByFn(index) {\n      return index;\n    }\n\n    onEventClick(event) {\n      const eventCopy = {\n        id: event.id,\n        name: event.name,\n        startDate: format(event.startDate, 'YYYY-MM-DD, HH:mm:ss'),\n        endDate: format(event.endDate, 'YYYY-MM-DD, HH:mm:ss'),\n        color: event.color\n      };\n      this.eventClicked.emit(eventCopy);\n    }\n\n    createListView(date) {\n      const firstDay = date;\n      const lastDay = endOfDay(addDays(firstDay, 6));\n      const period = {\n        start: `${getDate(firstDay)} ${this.monthsShort[getMonth(firstDay)]}, ${getYear(firstDay)}`,\n        end: `${getDate(lastDay)} ${this.monthsShort[getMonth(lastDay)]}, ${getYear(lastDay)}`\n      };\n      this.startDate = firstDay;\n      this.endDate = lastDay;\n      const eventsInPeriod = getListViewEvents(this.events, firstDay, lastDay);\n      return {\n        eventsInPeriod,\n        period\n      };\n    }\n\n  }\n\n  MdbCalendarListViewComponent.ɵfac = function MdbCalendarListViewComponent_Factory(t) {\n    return new (t || MdbCalendarListViewComponent)();\n  };\n\n  MdbCalendarListViewComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: MdbCalendarListViewComponent,\n    selectors: [[\"mdb-calendar-list-view\"]],\n    inputs: {\n      monthsShort: \"monthsShort\",\n      weekDayIndex: \"weekDayIndex\",\n      initDate: \"initDate\",\n      events: \"events\",\n      options: \"options\"\n    },\n    outputs: {\n      viewChanged: \"viewChanged\",\n      eventClicked: \"eventClicked\",\n      listChanged: \"listChanged\"\n    },\n    decls: 21,\n    vars: 8,\n    consts: [[1, \"mdb-list-view\"], [1, \"mdb-calendar-tools\", \"d-flex\", \"justify-content-between\", \"mb-3\"], [\"role\", \"group\", 1, \"btn-group\", \"btn-group-sm\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-previous-btn\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-left\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-next-button\", \"px-4\", 3, \"click\"], [\"fas\", \"\", \"icon\", \"chevron-right\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-today-btn\", \"px-4\", 3, \"click\"], [1, \"mdb-calendar-heading\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-month-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-week-btn\", \"px-4\", 3, \"click\"], [\"mdbBtn\", \"\", \"color\", \"info\", \"outline\", \"true\", 1, \"mdb-calendar-list-btn\", \"px-4\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"grey\", \"lighten-4\"], [1, \"text-left\", \"font-weight-bold\"], [\"fas\", \"\", \"icon\", \"calendar-alt\"], [1, \"font-weight-bold\", \"text-right\"], [\"fas\", \"\", \"icon\", \"clock\"], [3, \"click\"], [\"colspan\", \"2\", 1, \"text-left\", \"mdb-list-event\"], [\"fas\", \"\", \"icon\", \"circle\"]],\n    template: function MdbCalendarListViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_3_listener() {\n          return ctx.previous();\n        });\n        ɵngcc0.ɵɵelement(4, \"mdb-icon\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"button\", 5);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_5_listener() {\n          return ctx.next();\n        });\n        ɵngcc0.ɵɵelement(6, \"mdb-icon\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"button\", 7);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_7_listener() {\n          return ctx.goToToday();\n        });\n        ɵngcc0.ɵɵtext(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"h2\", 8);\n        ɵngcc0.ɵɵtext(10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(12, \"button\", 9);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_12_listener() {\n          return ctx.onViewChange(\"month\");\n        });\n        ɵngcc0.ɵɵtext(13);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(14, \"button\", 10);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_14_listener() {\n          return ctx.onViewChange(\"week\");\n        });\n        ɵngcc0.ɵɵtext(15);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(16, \"button\", 11);\n        ɵngcc0.ɵɵlistener(\"click\", function MdbCalendarListViewComponent_Template_button_click_16_listener() {\n          return ctx.onViewChange(\"list\");\n        });\n        ɵngcc0.ɵɵtext(17);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(18, \"table\");\n        ɵngcc0.ɵɵelementStart(19, \"tbody\");\n        ɵngcc0.ɵɵtemplate(20, MdbCalendarListViewComponent_ng_container_20_Template, 12, 8, \"ng-container\", 12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(8);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.todayBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate2(\"\", ctx.listView.period.start, \" - \", ctx.listView.period.end, \"\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.monthViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.weekViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.options.listViewBtnTxt, \" \");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.listView.eventsInPeriod)(\"ngForTrackBy\", ctx.trackByFn);\n      }\n    },\n    directives: [ɵngcc1.MdbBtnDirective, ɵngcc1.MdbIconComponent, ɵngcc1.FasDirective, ɵngcc3.NgForOf],\n    styles: [\".mdb-list-view[_ngcontent-%COMP%]{width:100%;height:100%;margin-bottom:50px}.mdb-list-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{table-layout:fixed;width:100%;border:1px solid #ddd}.mdb-list-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .mdb-list-view[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]{padding:8px 10px;border-top:1px solid #ddd;border-bottom:1px solid #ddd}.mdb-list-event[_ngcontent-%COMP%]{cursor:pointer}.mdb-list-event[_ngcontent-%COMP%]:hover{background-color:#45526e0d}\"]\n  });\n  return MdbCalendarListViewComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet MdbCalendarModule = /*#__PURE__*/(() => {\n  class MdbCalendarModule {}\n\n  MdbCalendarModule.ɵfac = function MdbCalendarModule_Factory(t) {\n    return new (t || MdbCalendarModule)();\n  };\n\n  MdbCalendarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: MdbCalendarModule\n  });\n  MdbCalendarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[ButtonsModule, InputsModule, IconsModule, ModalModule.forRoot(), TooltipModule.forRoot(), CommonModule, ReactiveFormsModule]]\n  });\n  return MdbCalendarModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MdbCalendarModule, {\n    declarations: function () {\n      return [MdbCalendarComponent, EventModalComponent, MdbCalendarWeekViewComponent, MdbCalendarMonthViewComponent, MdbCalendarListViewComponent];\n    },\n    imports: function () {\n      return [ButtonsModule, InputsModule, IconsModule, ɵngcc1.ModalModule, ɵngcc1.TooltipModule, CommonModule, ReactiveFormsModule];\n    },\n    exports: function () {\n      return [MdbCalendarComponent, MdbCalendarWeekViewComponent, MdbCalendarMonthViewComponent, MdbCalendarListViewComponent, EventModalComponent];\n    }\n  });\n})();\n/*\n * Public API Surface of calendar-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CalendarView, EventModalComponent, MdbCalendarComponent, MdbCalendarListViewComponent, MdbCalendarModule, MdbCalendarMonthViewComponent, MdbCalendarWeekViewComponent }; //# sourceMappingURL=mdb-calendar.js.map","map":null,"metadata":{},"sourceType":"module"}