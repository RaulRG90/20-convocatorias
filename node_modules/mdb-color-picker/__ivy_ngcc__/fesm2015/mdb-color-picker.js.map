{"version":3,"file":"mdb-color-picker.js","sources":["../../../projects/mdb-color-picker/src/lib/services/mdb-color-picker.service.ts","../../../projects/mdb-color-picker/src/lib/components/mdb-color-palette/mdb-color-palette.component.ts","../../../projects/mdb-color-picker/src/lib/components/mdb-color-picker/mdb-color-picker.component.ts","../../../projects/mdb-color-picker/src/lib/directives/mdb-color-draggable.directive.ts","../../../projects/mdb-color-picker/src/lib/components/mdb-color-slider/mdb-color-slider.component.ts","../../../projects/mdb-color-picker/src/lib/components/mdb-color-picker-alpha-slider/mdb-color-picker-alpha-slider.component.ts","../../../projects/mdb-color-picker/src/lib/directives/mdb-color-picker-toggle.directive.ts","../../../projects/mdb-color-picker/src/lib/mdb-color-picker.module.ts","../../../projects/mdb-color-picker/src/public_api.ts","../../../projects/mdb-color-picker/src/mdb-color-picker.ts"],"names":[],"mappings":"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","sourcesContent":["import { Coords } from './../interfaces/coords.interface';\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MdbColorPickerService {\n  private _segmentedColor: string;\n  private _segmentedColorChange: Subject<string> = new Subject<string>();\n\n  private _alpha = '0.5';\n  private _alphaChange: Subject<string> = new Subject<string>();\n\n  private _coords: Coords;\n  private _coordsChange: Subject<Coords> = new Subject<Coords>();\n\n  private _rgbaColor: Array<string> | string;\n\n  private _rgbaSegments: Array<string> = ['255', '255', '255', '0.5'];\n\n  private _color: { rgbaColor: string, hexColor: string } = { rgbaColor: '', hexColor: '' };\n  private _colorChange: Subject<{ rgbaColor: string, hexColor: string }> = new Subject<{ rgbaColor: string, hexColor: string }>();\n\n  private _colorPalette: any[] = [];\n  private _colorPaletteChange: Subject<Array<any>> = new Subject<Array<any>>();\n\n  public setColorPalette(colorArray: Array<any>) {\n    this._colorPalette = colorArray;\n    this._colorPaletteChange.next(this.getColorPalette());\n  }\n\n  public addColorToPalette(color: any) {\n    this._colorPalette.push(color);\n    this._colorPaletteChange.next(this.getColorPalette());\n  }\n\n  public getColorPalette() {\n    return this._colorPalette;\n  }\n\n  public removeColorFromPalette(index: number) {\n    this._colorPalette.splice(index, 1);\n  }\n\n  public colorPaletteWasChanged(): Observable<Array<any>> {\n    return this._colorPaletteChange;\n  }\n\n  private setColor(rgbaColor?: any, hexColor?: any) {\n    this._color.rgbaColor = rgbaColor;\n    this._color.hexColor = hexColor;\n    this._colorChange.next(this.getColor());\n  }\n\n  public getColor() {\n    return this._color;\n  }\n\n  public colorWasChanged(): Observable<{ rgbaColor: string, hexColor: string }> {\n    return this._colorChange;\n  }\n\n  setSegmentedColor(value: string) {\n    this._segmentedColor = value;\n    this._segmentedColorChange.next(this.getSegmentedColor());\n\n    const rgbaColor = this.convertToRGBA();\n    const hexColor = this.rgbaToHex(this.getRgbaColor());\n    this.setColor(rgbaColor, hexColor);\n  }\n\n  getSegmentedColor() {\n    return this._segmentedColor;\n  }\n\n  colorSegmentedWasChanged(): Observable<string> {\n    return this._segmentedColorChange;\n  }\n\n  public setAlpha(value: string) {\n    this._alpha = value;\n    this._alphaChange.next(this.getAlpha());\n\n    const rgbaColor = this.convertToRGBA();\n    const hexColor = this.rgbaToHex(this.getRgbaColor());\n    this.setColor(rgbaColor, hexColor);\n  }\n\n  public getAlpha() {\n    return this._alpha;\n  }\n\n  public alphaWasChanged(): Observable<string> {\n    return this._alphaChange;\n  }\n\n  public setCoords(value: Coords) {\n    this._coords = value;\n    this._coordsChange.next(this.getCoords());\n  }\n\n  public getCoords() {\n    return this._coords;\n  }\n\n  public coordsWasChanged(): Observable<Coords> {\n    return this._coordsChange;\n  }\n\n  protected convertToRGBA() {\n    this._rgbaColor = this.getSegmentedColor().split(',');\n    const alphaChannel = this.getAlpha();\n    this._rgbaSegments[0] = this._rgbaColor[0];\n    this._rgbaSegments[1] = this._rgbaColor[1];\n    this._rgbaSegments[2] = this._rgbaColor[2];\n    this._rgbaSegments[3] = alphaChannel;\n    return 'rgba(' + this._rgbaSegments.toString() + ')';\n  }\n\n  public getRgbaColor() {\n    return this.convertToRGBA();\n  }\n\n  public getHexColor() {\n    return this.rgbaToHex(this.getSegmentedColor() + ',' + this.getAlpha());\n  }\n\n  public rgbaToHex(value: any) {\n    value = value.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\n    return (value && value.length === 4) ? '#' +\n      ('0' + parseInt(value[1], 10).toString(16)).slice(-2) +\n      ('0' + parseInt(value[2], 10).toString(16)).slice(-2) +\n      ('0' + parseInt(value[3], 10).toString(16)).slice(-2) : '';\n  }\n\n  public hexToRgba(value: string, alpha?: string) {\n    const r = parseInt(value.slice(1, 3), 16);\n    const g = parseInt(value.slice(3, 5), 16);\n    const b = parseInt(value.slice(5, 7), 16);\n\n    if (alpha) {\n      return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n    } else {\n      return `rgb(${r}, ${g}, ${b})`;\n    }\n  }\n\n  constructor() { }\n}\n","import { MdbColorPickerService } from './../../services/mdb-color-picker.service';\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  Input,\n  Output,\n  SimpleChanges,\n  OnChanges,\n  EventEmitter,\n  HostListener,\n  Renderer2,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { Coords } from '../../interfaces/coords.interface';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'mdb-color-palette',\n  templateUrl: './mdb-color-palette.component.html',\n  styleUrls: ['./mdb-color-palette.component.scss']\n})\nexport class MdbColorPaletteComponent implements AfterViewInit, OnChanges {\n  @Input() hue: string;\n\n  @Output() color: EventEmitter<string> = new EventEmitter(true);\n\n  @ViewChild('canvas', { static: true }) canvas:\n    | ElementRef<HTMLCanvasElement>\n    | any;\n\n  private ctx: CanvasRenderingContext2D | any;\n  private mousedown = false;\n  isBrowser: boolean = false;\n\n  public selectedPosition: { x: number; y: number };\n\n  @HostListener('window:mouseup') onmouseup() {\n    this.mousedown = false;\n  }\n\n  constructor(\n    private renderer: Renderer2,\n    private colorService: MdbColorPickerService,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.isBrowser = isPlatformBrowser(this.platformId);\n    this.colorService.coordsWasChanged().subscribe((data: Coords) => {\n      this.getColorAtPosition(data.x, data.y);\n      this.selectedPosition = { x: data.x, y: data.y };\n      this.draw();\n    });\n\n    this.colorService.colorWasChanged().subscribe(() => {\n      this.draw();\n    });\n  }\n\n  private draw() {\n    if (this.isBrowser) {\n      if (!this.ctx) {\n        this.ctx = this.canvas.nativeElement.getContext('2d');\n      }\n\n      setTimeout(() => {\n        const canvasParentWidth: any = this.canvas.nativeElement.parentElement\n          .parentElement.clientWidth;\n\n        this.renderer.setAttribute(\n          this.canvas.nativeElement,\n          'width',\n          canvasParentWidth + 'px'\n        );\n\n        const width = this.canvas.nativeElement.clientWidth;\n        const height = this.canvas.nativeElement.clientHeight;\n\n        this.ctx.fillStyle = this.hue || 'rgba(255, 255, 255, 1)';\n        this.ctx.fillRect(0, 0, width, height);\n\n        const whiteGrad = this.ctx.createLinearGradient(0, 0, width, 0);\n        whiteGrad.addColorStop(0, 'rgba(255, 255, 255, 1)');\n        whiteGrad.addColorStop(1, 'rgba(255, 255, 255, 0)');\n\n        this.ctx.fillStyle = whiteGrad;\n        this.ctx.fillRect(0, 0, width, height);\n\n        const blackGrad = this.ctx.createLinearGradient(0, 0, 0, height);\n        blackGrad.addColorStop(0, 'rgba(0, 0, 0, 0)');\n        blackGrad.addColorStop(1, 'rgba(0, 0, 0, 1)');\n\n        this.ctx.fillStyle = blackGrad;\n        this.ctx.fillRect(0, 0, width, height);\n\n        if (this.selectedPosition) {\n          this.ctx.strokeStyle = 'white';\n          this.ctx.fillStyle = 'white';\n          this.ctx.beginPath();\n          this.ctx.arc(\n            this.selectedPosition.x,\n            this.selectedPosition.y,\n            5,\n            0,\n            2 * Math.PI\n          );\n          this.ctx.lineWidth = 2;\n          this.ctx.stroke();\n        }\n      }, 0);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['hue']) {\n      this.draw();\n      const pos = this.selectedPosition;\n      if (pos) {\n        this.getColorAtPosition(pos.x, pos.y);\n      }\n    }\n  }\n\n  onMouseDown(event: any) {\n    this.mousedown = true;\n    if (event.type === 'touchstart') {\n      const rect = event.target.getBoundingClientRect();\n      this.selectedPosition = {\n        x: event.targetTouches[0].pageX - rect.left,\n        y: event.targetTouches[0].pageY - rect.top\n      };\n    } else if (event.type === 'mousedown') {\n      this.selectedPosition = { x: event.offsetX, y: event.offsetY };\n    }\n    this.draw();\n    this.getColorAtPosition(this.selectedPosition.x, this.selectedPosition.y);\n  }\n\n  onMouseMove(event: any) {\n    if (this.mousedown) {\n      if (event.type === 'touchmove') {\n        event.preventDefault();\n        const rect = event.target.getBoundingClientRect();\n        this.selectedPosition = {\n          x: event.targetTouches[0].pageX - rect.left,\n          y: event.targetTouches[0].pageY - rect.top\n        };\n      } else if (event.type === 'mousemove') {\n        this.selectedPosition = { x: event.offsetX, y: event.offsetY };\n      }\n      this.draw();\n      this.getColorAtPosition(this.selectedPosition.x, this.selectedPosition.y);\n    }\n  }\n\n  protected getColorAtPosition(x: number, y: number) {\n    if (this.isBrowser) {\n      const imageData = this.ctx.getImageData(x, y, 1, 1).data;\n      this.colorService.setSegmentedColor(\n        `${imageData[0]},${imageData[1]},${imageData[2]}`\n      );\n      return (\n        'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)'\n      );\n    }\n  }\n\n  private pickColorAtStart(x: number, y: number) {\n    if (this.isBrowser) {\n      this.selectedPosition = { x: x, y: y };\n      this.ctx.strokeStyle = 'white';\n      this.ctx.fillStyle = 'white';\n      this.ctx.beginPath();\n      this.ctx.arc(\n        this.selectedPosition.x,\n        this.selectedPosition.y,\n        10,\n        0,\n        2 * Math.PI\n      );\n      this.ctx.lineWidth = 5;\n      this.ctx.stroke();\n      this.getColorAtPosition(x, y);\n      this.colorService.setCoords({ x: x, y: y });\n    }\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.pickColorAtStart(195, 75);\n      this.draw();\n    }, 0);\n  }\n}\n","import {\n  Component,\n  ChangeDetectorRef,\n  AfterViewInit,\n  Input,\n  ElementRef,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { MdbColorPickerService } from '../../services/mdb-color-picker.service';\nimport { Config } from '../../interfaces/config.interface';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mdb-color-picker',\n  templateUrl: './mdb-color-picker.component.html',\n  styleUrls: ['./mdb-color-picker.component.scss'],\n  exportAs: 'mdb-color-picker'\n})\nexport class MdbColorPickerComponent implements AfterViewInit, OnDestroy {\n  @Input() colorPalette: Array<any> = [];\n  @Input() options: Config | any;\n  @Input() defaultRangeSlider: boolean = true;\n\n  public hue: string;\n  public colorString: any;\n\n  config: Config | any = {\n    showPalette: true,\n    showOpacitySlider: true,\n    showRgbaHexColorText: true\n  };\n\n  color: any;\n  alphaChannel = '0.5';\n  opacityValue: string = '';\n\n  private colorSegments: Array<string> = ['255', '255', '255', '1'];\n  private observer: MutationObserver;\n\n  switchValue = false;\n  isBrowser: boolean = false;\n  showPicker = false;\n\n  private componentDestroyed = new Subject<any>();\n\n  constructor(\n    private colorService: MdbColorPickerService,\n    private cdRef: ChangeDetectorRef,\n    public el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.colorService\n      .colorSegmentedWasChanged()\n      .pipe(takeUntil(this.componentDestroyed))\n      .subscribe((data: string) => {\n        this.colorString =\n          'rgba(' + data.split(',') + ', ' + this.alphaChannel + ')';\n        this.color = this.colorService.getSegmentedColor();\n        this.color = this.color.split(',');\n        this.change();\n        this.cdRef.detectChanges();\n      });\n\n    this.colorService.alphaWasChanged().subscribe(() => {\n      this.alphaChannel = this.colorService.getAlpha();\n    });\n\n    this.colorService.coordsWasChanged().subscribe(() => {\n      this.colorService.colorWasChanged().subscribe((color: any) => {\n        if (this.switchValue === false) {\n          this.colorString = color.rgbaColor;\n        } else {\n          this.colorString = color.hexColor;\n        }\n      });\n    });\n\n    this.colorService.colorPaletteWasChanged().subscribe((data: any) => {\n      this.colorPalette = data;\n    });\n\n    // Resolves problem with hidden canvas of color picker and color slider\n    // when color picker component was placed inside of static modal\n    this.observer = new MutationObserver(mutations => {\n      mutations.forEach((mutation: any) => {\n        const stylesAttribute = mutation.target.getAttribute('style');\n        if (stylesAttribute) {\n          this.showPicker = stylesAttribute.includes('visibility: visible');\n          this.cdRef.detectChanges();\n        }\n      });\n    });\n\n    this.observer.observe(this.el.nativeElement, {\n      attributes: true,\n      childList: true,\n      characterData: true\n    });\n  }\n\n  private setOptions() {\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k: any) => {\n        this.config[k] = this.options[k];\n      });\n    }\n  }\n\n  onAlphaInput(event: any) {\n    this.colorService.setAlpha(event.target.value);\n    this.colorSegments[0] = this.color[0];\n    this.colorSegments[1] = this.color[1];\n    this.colorSegments[2] = this.color[2];\n    this.colorSegments[3] = this.alphaChannel;\n    this.colorString = 'rgba(' + this.colorSegments.toString() + ')';\n    this.change();\n  }\n\n  copyToClipboard(type: string) {\n    const el = this.renderer.createElement('textarea');\n    if (type === 'color') {\n      el.value = this.colorString;\n    } else if (type === 'palette') {\n      this.colorService.getColorPalette().forEach((color: any) => {\n        el.value += '{';\n        el.value += 'rgbaColor: ' + `'${color.rgbaColor}'` + ', ';\n        el.value += 'hexColor: ' + `'${color.hexColor}'`;\n        el.value += '}, ';\n      });\n    }\n    this.renderer.setAttribute(el, 'readonly', '');\n    this.renderer.setStyle(el, 'position', 'absolute');\n    this.renderer.setStyle(el, 'left', '-9999px');\n    this.renderer.appendChild(document.body, el);\n    el.select();\n    document.execCommand('copy');\n    this.renderer.removeChild(document.body, el);\n  }\n\n  clearColor() {\n    if (this.colorService.getCoords()) {\n      this.colorService.setCoords({\n        x: this.colorService.getCoords().x,\n        y: this.colorService.getCoords().y\n      });\n    } else {\n      this.colorService.setCoords({ x: 122, y: 137 });\n    }\n    this.change();\n    if (this.colorService.getAlpha() !== '0.5') {\n      this.colorService.setAlpha(this.colorService.getAlpha());\n    } else {\n      this.colorService.setAlpha('0.5');\n    }\n    this.colorService.setColorPalette([]);\n  }\n\n  addColorToPalette() {\n    this.colorService.addColorToPalette({\n      rgbaColor: this.colorService.getColor().rgbaColor,\n      hexColor: this.colorService.getColor().hexColor\n    });\n    this.colorPalette = this.colorService.getColorPalette();\n  }\n\n  setColorPaletteCircleColor(index: number) {\n    if (!this.switchValue) {\n      return this.colorPalette[index].rgbaColor;\n    } else if (this.switchValue) {\n      return this.colorPalette[index].hexColor;\n    }\n  }\n\n  protected changeColorSystemTo(colorSystem: string) {\n    if (colorSystem === 'rgba') {\n      this.colorString = this.colorService.getColor().rgbaColor;\n      return 'rgba';\n    } else {\n      this.colorString = this.colorService.getColor().hexColor;\n      return 'hex';\n    }\n  }\n\n  private change() {\n    if (!this.switchValue) {\n      this.changeColorSystemTo('rgba');\n    } else {\n      this.changeColorSystemTo('hex');\n    }\n  }\n\n  changeColorType() {\n    this.switchValue = !this.switchValue;\n    this.change();\n  }\n\n  ngAfterViewInit() {\n    this.changeColorSystemTo('rgba');\n    if (this.colorPalette) {\n      this.colorService.setColorPalette(this.colorPalette);\n    }\n    this.setOptions();\n    this.cdRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this.observer.disconnect();\n    this.componentDestroyed.next();\n    this.componentDestroyed.complete();\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener\n} from '@angular/core';\n\ninterface Position {\n  x: number;\n}\n\n@Directive({\n  selector: '[mdbColorDraggable]'\n})\nexport class MdbColorDraggableDirective {\n  public elementPosition: Position = { x: 0 };\n\n  private startingPosition: Position;\n\n  constructor(private el: ElementRef) {}\n\n  @HostBinding('class.mdb-movable')\n  movable = true;\n\n  private isElementMoving: boolean;\n\n  @HostListener('mousedown', ['$event'])\n  @HostListener('touchstart', ['$event'])\n  onStartMove(event: any): void {\n    this.isElementMoving = true;\n    this.startMoving(event);\n  }\n\n  @HostListener('document:mousemove', ['$event'])\n  @HostListener('touchmove', ['$event'])\n  onMove(event: any): void {\n    if (!this.isElementMoving) {\n      return;\n    }\n\n    this.movingOver(event);\n  }\n\n  @HostListener('document:mouseup')\n  @HostListener('touchend')\n  onEndMove(): void {\n    if (!this.isElementMoving) {\n      return;\n    }\n    this.isElementMoving = false;\n  }\n\n  private startMoving(event: any) {\n    if (event.type === 'mousedown') {\n      this.startingPosition = {\n        x: event.clientX - this.elementPosition.x\n      };\n    } else {\n      this.startingPosition = {\n        x: event.changedTouches[0].clientX - this.elementPosition.x\n      };\n    }\n  }\n\n  private movingOver(event: any) {\n    if (event.type === 'mousemove') {\n      this.elementPosition.x = event.clientX - this.startingPosition.x;\n    } else {\n      this.elementPosition.x =\n        event.changedTouches[0].clientX - this.startingPosition.x;\n    }\n    this.updatePosition();\n  }\n\n  public moveTo(value: any) {\n    this.elementPosition.x = value;\n    this.updatePosition();\n  }\n\n  private updatePosition() {\n    if (\n      this.elementPosition.x >= 1 &&\n      this.elementPosition.x <= this.el.nativeElement.parentElement.offsetWidth\n    ) {\n      requestAnimationFrame(() => {\n        this.el.nativeElement.style.transform = `\n                translateX(${this.elementPosition.x}px)\n              `;\n      });\n    }\n  }\n}\n","import { MdbColorDraggableDirective } from './../../directives/mdb-color-draggable.directive';\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n  Renderer2,\n  Inject,\n  PLATFORM_ID\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'mdb-color-slider',\n  templateUrl: './mdb-color-slider.component.html',\n  styleUrls: ['./mdb-color-slider.component.scss']\n})\nexport class MdbColorSliderComponent implements AfterViewInit {\n  @ViewChild('handle', { static: true }) handle: ElementRef;\n  @ViewChild('slider', { static: true }) slider: ElementRef;\n  @ViewChild('canvas', { static: true }) canvas: ElementRef<HTMLCanvasElement>;\n\n  @ViewChild(MdbColorDraggableDirective, { static: true })\n  drag: MdbColorDraggableDirective;\n  @Output() color: EventEmitter<string> = new EventEmitter();\n\n  private mousedown = false;\n  private ctx: CanvasRenderingContext2D | any;\n  private sliderParent: any;\n  private previousImageData: any = null;\n\n  isBrowser: boolean = false;\n\n  constructor(\n    private renderer: Renderer2,\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: any\n  ) {\n    this.isBrowser = isPlatformBrowser(this.platformId);\n  }\n\n  handleMouseDown() {\n    if (this.isBrowser) {\n      this.mousedown = true;\n      this.renderer.addClass(this.handle.nativeElement, 'pop');\n      this.renderer.addClass(this.slider.nativeElement, 'grad');\n\n      this.renderer.setStyle(this.canvas.nativeElement, 'margin-left', '-13px');\n    }\n  }\n\n  moveColorCircleToPosition(event: any) {\n    const rect = event.target.getBoundingClientRect();\n    let pos = null;\n    if (event.type === 'touchmove') {\n      event.preventDefault();\n      this.drag.moveTo(event.targetTouches[0].pageX - rect.left);\n      this.drag.elementPosition.x = event.targetTouches[0].pageX - rect.left;\n      pos = {\n        x:\n          event.targetTouches[0].pageX -\n          this.slider.nativeElement.getBoundingClientRect().left,\n        y:\n          event.targetTouches[0].pageY -\n          this.slider.nativeElement.getBoundingClientRect().top\n      };\n    } else if (event.type === 'click') {\n      this.drag.moveTo(event.layerX);\n      this.drag.elementPosition.x = event.layerX;\n\n      pos = {\n        x: event.x - this.slider.nativeElement.getBoundingClientRect().x,\n        y: event.y - this.slider.nativeElement.getBoundingClientRect().y\n      };\n    }\n    if (pos !== null) {\n      this.draw();\n      this.emitColor(pos.x, pos.y);\n      this.renderer.setStyle(\n        this.handle.nativeElement,\n        'background-color',\n        this.getColorAtPosition(pos.x, pos.y)\n      );\n    }\n  }\n\n  handleMouseUp() {\n    this.mousedown = false;\n    this.renderer.removeClass(this.handle.nativeElement, 'pop');\n    this.renderer.removeClass(this.slider.nativeElement, 'grad');\n  }\n\n  handleMouseMove(event: any) {\n    if (this.mousedown) {\n      let left = 0;\n      let pos = null;\n\n      if (event.type === 'touchmove') {\n        event.preventDefault();\n        left =\n          event.targetTouches[0].pageX -\n          this.slider.nativeElement.getBoundingClientRect().left +\n          5;\n        const rect = event.target.getBoundingClientRect();\n        pos = {\n          x: event.targetTouches[0].pageX - rect.left,\n          y: event.targetTouches[0].pageY - rect.top\n        };\n      } else if (event.type === 'mousemove') {\n        left =\n          event.clientX -\n          this.slider.nativeElement.getBoundingClientRect().left +\n          5;\n        pos = {\n          x: event.x - this.slider.nativeElement.getBoundingClientRect().x,\n          y: event.y - this.slider.nativeElement.getBoundingClientRect().y\n        };\n      }\n      if (left <= this.sliderParent.clientWidth && pos !== null) {\n        this.draw();\n        this.emitColor(pos.x, pos.y);\n        this.renderer.setStyle(\n          this.handle.nativeElement,\n          'background-color',\n          this.getColorAtPosition(pos.x, pos.y)\n        );\n      }\n    }\n  }\n\n  private draw() {\n    if (this.isBrowser) {\n      if (!this.ctx) {\n        this.ctx = this.canvas.nativeElement.getContext('2d');\n      }\n\n      setTimeout(() => {\n        const width = this.sliderParent.clientWidth;\n        const height = 12;\n\n        this.renderer.setAttribute(\n          this.canvas.nativeElement,\n          'width',\n          width + 'px'\n        );\n        let grd;\n\n        grd = this.ctx.createLinearGradient(0.0, 150.0, width, 12);\n\n        grd.addColorStop(0.0, 'rgba(255, 0, 0, 1.000)');\n        grd.addColorStop(0.2, 'rgba(255, 0, 255, 1.000)');\n        grd.addColorStop(0.35, 'rgba(0, 0, 255, 1.000)');\n        grd.addColorStop(0.52, 'rgba(0, 255, 255, 1.000)');\n        grd.addColorStop(0.71, 'rgba(0, 255, 0, 1.000)');\n        grd.addColorStop(0.88, 'rgba(255, 255, 0, 1.000)');\n        grd.addColorStop(1.0, 'rgba(255, 0, 148, 1.000)');\n\n        this.ctx.fillStyle = grd;\n        this.ctx.fillRect(0, 0, width, height);\n      }, 0);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.isBrowser) {\n      this.sliderParent = this.slider.nativeElement.parentElement.parentElement.parentElement;\n      this.renderer.setStyle(\n        this.slider.nativeElement,\n        'width',\n        this.sliderParent.clientWidth + 'px'\n      );\n      this.draw();\n      this.renderer.setStyle(this.canvas.nativeElement, 'margin-left', '-13px');\n      this.setCanvasParentsWidth();\n    }\n  }\n\n  private setCanvasParentsWidth() {\n    setTimeout(() => {\n      this.renderer.setStyle(\n        this.el.nativeElement,\n        'width',\n        this.sliderParent.clientWidth + 'px'\n      );\n    }, 0);\n  }\n\n  private emitColor(x: number, y: number) {\n    const rgbaColor = this.getColorAtPosition(x, y);\n    this.color.emit(rgbaColor);\n  }\n\n  private getColorAtPosition(x: number, y: number) {\n    if (this.isBrowser) {\n      const imageData = this.ctx.getImageData(x, y, 1, 1).data;\n      if (\n        imageData[0] + imageData[1] + imageData[2] > 0 ||\n        this.previousImageData == null\n      ) {\n        this.previousImageData = imageData;\n      } else {\n        return `rgba(${this.previousImageData[0]},${this.previousImageData[1]}, ${this.previousImageData[2]}, 1)`;\n      }\n      return (\n        'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)'\n      );\n    }\n  }\n}\n","import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport {\n  Component,\n  ViewChild,\n  ElementRef,\n  Renderer2,\n  Input,\n  HostListener,\n  forwardRef,\n  AfterViewInit,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef\n} from '@angular/core';\n\nexport const RANGE_VALUE_ACCESOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MdbColorPickerAlphaSliderComponent),\n  multi: true\n};\n\n@Component({\n  selector: 'mdb-color-picker-alpha-slider',\n  templateUrl: './mdb-color-picker-alpha-slider.component.html',\n  providers: [RANGE_VALUE_ACCESOR]\n})\nexport class MdbColorPickerAlphaSliderComponent\n  implements ControlValueAccessor, AfterViewInit {\n  @ViewChild('input') input: ElementRef;\n  @ViewChild('rangeCloud') rangeCloud: ElementRef;\n  @ViewChild('rangeField') rangeField: ElementRef;\n\n  @Input() id: string;\n  @Input() required: boolean;\n  @Input() name: string;\n  @Input() value: string;\n  @Input() disabled: boolean;\n  @Input() min = 0;\n  @Input() max = 100;\n  @Input() step: number;\n  @Input() default: boolean;\n  @Input() defaultRangeCounterClass: string;\n\n  @Output() rangeValueChange = new EventEmitter<any>();\n\n  range: any = 0;\n  stepLength: number;\n  steps: number;\n  cloudRange = 0;\n  visibility = false;\n\n  @HostListener('change', ['$event']) onchange(event: any) {\n    this.onChange(event.target.value);\n  }\n\n  @HostListener('input', ['$event']) oninput(event: any) {\n    const value: number = +event.target.value;\n    this.rangeValueChange.emit({ value: value });\n\n    if (this.checkIfSafari()) {\n      this.focusRangeInput();\n    }\n  }\n\n  @HostListener('click') onclick() {\n    this.focusRangeInput();\n  }\n\n  @HostListener('mouseleave') onmouseleave() {\n    if (this.checkIfSafari()) {\n      this.blurRangeInput();\n    }\n  }\n  constructor(private renderer: Renderer2, private cdRef: ChangeDetectorRef) {}\n\n  focusRangeInput() {\n    this.input.nativeElement.focus();\n    this.visibility = true;\n  }\n\n  blurRangeInput() {\n    this.input.nativeElement.blur();\n    this.visibility = false;\n  }\n\n  coverage(event: any) {\n    if (typeof this.range === 'string' && this.range.length !== 0) {\n      return this.range;\n    }\n\n    if (!this.default) {\n      const newValue = event.target.value;\n      const newRelativeGain = newValue - this.min;\n      const inputWidth = this.input.nativeElement.offsetWidth;\n\n      let thumbOffset = 0;\n      const offsetAmmount = 15;\n      const distanceFromMiddle = newRelativeGain - this.steps / 2;\n\n      this.stepLength = inputWidth / this.steps;\n\n      thumbOffset = (distanceFromMiddle / this.steps) * offsetAmmount;\n      this.cloudRange = this.stepLength * newRelativeGain - thumbOffset;\n\n      this.renderer.setStyle(\n        this.rangeCloud.nativeElement,\n        'left',\n        this.cloudRange + 'px'\n      );\n    }\n  }\n\n  checkIfSafari() {\n    const isSafari = navigator.userAgent.indexOf('Safari') > -1;\n    const isChrome = navigator.userAgent.indexOf('Chrome') > -1;\n    const isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n    const isOpera = navigator.userAgent.indexOf('Opera') > -1;\n\n    if (isSafari && !isChrome && !isFirefox && !isOpera) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.steps = this.max - this.min;\n\n    if (this.value) {\n      this.range = this.value;\n      this.cdRef.detectChanges();\n    }\n  }\n\n  // Control Value Accessor Methods\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n}\n","import { Directive, HostListener, Input, Renderer2 } from '@angular/core';\nimport { MdbColorPickerComponent } from '../components/mdb-color-picker/mdb-color-picker.component';\n\n@Directive({ selector: '[mdbColorPickerToggle]' })\nexport class MdbColorPickerToggleDirective {\n  @Input() mdbColorPickerToggle: MdbColorPickerComponent;\n  @Input() transitionTime: number = 200;\n\n  private _isPickerVisible: boolean = false;\n  private _clickEventTarget: any = null;\n\n  constructor(private renderer: Renderer2) {}\n\n  @HostListener('click', ['$event']) onClick(event: any) {\n    this._clickEventTarget = event.target;\n    this.toggleColorPicker();\n  }\n\n  @HostListener('window:click', ['$event']) onWindowClick(event: any) {\n    if (\n      event.target !== this._clickEventTarget &&\n      this._isPickerVisible &&\n      !this._getClosestEl(event.target, 'mdb-color-picker')\n    ) {\n      this.toggleColorPicker();\n    }\n  }\n\n  public toggleColorPicker() {\n    const opacityStyle = this._isPickerVisible ? '0' : '1';\n    const visibilityStyle = this._isPickerVisible ? 'hidden' : 'visible';\n    this.renderer.setStyle(\n      this.mdbColorPickerToggle.el.nativeElement,\n      'transition',\n      `opacity ${this.transitionTime}ms`\n    );\n    this.renderer.setStyle(\n      this.mdbColorPickerToggle.el.nativeElement,\n      'opacity',\n      opacityStyle\n    );\n    this.renderer.setStyle(\n      this.mdbColorPickerToggle.el.nativeElement,\n      'visibility',\n      'visible'\n    );\n    setTimeout(() => {\n      this.renderer.setStyle(\n        this.mdbColorPickerToggle.el.nativeElement,\n        'visibility',\n        visibilityStyle\n      );\n    }, this.transitionTime);\n    this._isPickerVisible = !this._isPickerVisible;\n  }\n\n  private _getClosestEl(el: any, selector: string) {\n    for (; el && el !== document; el = el.parentNode) {\n      if (el.matches && el.matches(selector)) {\n        return el;\n      }\n    }\n    return null;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MdbColorPickerComponent} from './components/mdb-color-picker/mdb-color-picker.component';\nimport {MdbColorSliderComponent} from './components/mdb-color-slider/mdb-color-slider.component';\nimport {MdbColorPaletteComponent} from './components/mdb-color-palette/mdb-color-palette.component';\nimport {MdbColorPickerService} from './services/mdb-color-picker.service';\nimport {MdbColorDraggableDirective} from './directives/mdb-color-draggable.directive';\n\nimport {FormsModule} from '@angular/forms';\nimport {MdbColorPickerToggleDirective} from \"./directives/mdb-color-picker-toggle.directive\";\nimport {MdbColorPickerAlphaSliderComponent} from \"./components/mdb-color-picker-alpha-slider/mdb-color-picker-alpha-slider.component\";\n\n@NgModule({\n  declarations: [\n    MdbColorPickerComponent,\n    MdbColorSliderComponent,\n    MdbColorPaletteComponent,\n    MdbColorDraggableDirective,\n    MdbColorPickerToggleDirective,\n    MdbColorPickerAlphaSliderComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    MdbColorPickerComponent,\n    MdbColorSliderComponent,\n    MdbColorPaletteComponent,\n    MdbColorDraggableDirective,\n    MdbColorPickerToggleDirective,\n    MdbColorPickerAlphaSliderComponent\n  ],\n  providers: [\n    MdbColorPickerService\n  ]\n})\nexport class MdbColorPickerModule {\n}\n","/*\n * Public API Surface of mdb-color-picker\n */\n//\nexport * from './lib/components/mdb-color-palette/mdb-color-palette.component';\nexport * from './lib/components/mdb-color-picker/mdb-color-picker.component';\nexport * from './lib/components/mdb-color-slider/mdb-color-slider.component';\nexport * from './lib/components/mdb-color-picker-alpha-slider/mdb-color-picker-alpha-slider.component';\nexport * from './lib/directives/mdb-color-draggable.directive';\nexport * from './lib/directives/mdb-color-picker-toggle.directive';\nexport * from './lib/interfaces/config.interface';\nexport * from './lib/interfaces/coords.interface';\nexport * from './lib/services/mdb-color-picker.service';\nexport * from './lib/mdb-color-picker.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}