import { Coords } from './../interfaces/coords.interface';
import { Observable } from 'rxjs';
export declare class MdbColorPickerService {
    private _segmentedColor;
    private _segmentedColorChange;
    private _alpha;
    private _alphaChange;
    private _coords;
    private _coordsChange;
    private _rgbaColor;
    private _rgbaSegments;
    private _color;
    private _colorChange;
    private _colorPalette;
    private _colorPaletteChange;
    setColorPalette(colorArray: Array<any>): void;
    addColorToPalette(color: any): void;
    getColorPalette(): any[];
    removeColorFromPalette(index: number): void;
    colorPaletteWasChanged(): Observable<Array<any>>;
    private setColor;
    getColor(): {
        rgbaColor: string;
        hexColor: string;
    };
    colorWasChanged(): Observable<{
        rgbaColor: string;
        hexColor: string;
    }>;
    setSegmentedColor(value: string): void;
    getSegmentedColor(): string;
    colorSegmentedWasChanged(): Observable<string>;
    setAlpha(value: string): void;
    getAlpha(): string;
    alphaWasChanged(): Observable<string>;
    setCoords(value: Coords): void;
    getCoords(): Coords;
    coordsWasChanged(): Observable<Coords>;
    protected convertToRGBA(): string;
    getRgbaColor(): string;
    getHexColor(): string;
    rgbaToHex(value: any): string;
    hexToRgba(value: string, alpha?: string): string;
    constructor();
}
