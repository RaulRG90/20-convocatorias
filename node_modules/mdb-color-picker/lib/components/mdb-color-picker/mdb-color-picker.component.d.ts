import { ChangeDetectorRef, AfterViewInit, ElementRef, OnDestroy, Renderer2 } from '@angular/core';
import { MdbColorPickerService } from '../../services/mdb-color-picker.service';
import { Config } from '../../interfaces/config.interface';
import * as ɵngcc0 from '@angular/core';
export declare class MdbColorPickerComponent implements AfterViewInit, OnDestroy {
    private colorService;
    private cdRef;
    el: ElementRef;
    private renderer;
    colorPalette: Array<any>;
    options: Config | any;
    defaultRangeSlider: boolean;
    hue: string;
    colorString: any;
    config: Config | any;
    color: any;
    alphaChannel: string;
    opacityValue: string;
    private colorSegments;
    private observer;
    switchValue: boolean;
    isBrowser: boolean;
    showPicker: boolean;
    private componentDestroyed;
    constructor(colorService: MdbColorPickerService, cdRef: ChangeDetectorRef, el: ElementRef, renderer: Renderer2);
    private setOptions;
    onAlphaInput(event: any): void;
    copyToClipboard(type: string): void;
    clearColor(): void;
    addColorToPalette(): void;
    setColorPaletteCircleColor(index: number): any;
    protected changeColorSystemTo(colorSystem: string): "rgba" | "hex";
    private change;
    changeColorType(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<MdbColorPickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<MdbColorPickerComponent, "mdb-color-picker", ["mdb-color-picker"], { "colorPalette": "colorPalette"; "defaultRangeSlider": "defaultRangeSlider"; "options": "options"; }, {}, never, [".color-picker-switch", ".color-picker-buttons"]>;
}

//# sourceMappingURL=mdb-color-picker.component.d.ts.map