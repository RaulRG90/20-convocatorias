{"version":3,"file":"mdb-draggable.directive.d.ts","sources":["mdb-draggable.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, Renderer2, OnInit, OnDestroy, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nexport declare class MdbDraggableDirective implements OnInit, OnDestroy {\n    private el;\n    private renderer;\n    private document;\n    disabled: boolean;\n    resetPosition: boolean;\n    get boundTo(): any;\n    set boundTo(value: any);\n    private _boundTo;\n    get handle(): any;\n    set handle(value: any);\n    private _handle;\n    snapSensitivity: number;\n    lockAxis: string;\n    autoScroll: boolean;\n    scrollSpeed: number;\n    scrollSensitivity: number;\n    snapToGrid: boolean;\n    gridSize: number;\n    dragStart: EventEmitter<HTMLElement>;\n    dragEnd: EventEmitter<HTMLElement>;\n    private elPos;\n    private startPos;\n    private boundaries;\n    private draggableEl;\n    offsetX: Number;\n    offsetY: Number;\n    start$: Observable<any>;\n    move$: Observable<any>;\n    end$: Observable<any>;\n    private destroy$;\n    constructor(el: ElementRef, renderer: Renderer2, document: any);\n    movable: boolean;\n    dragging: boolean;\n    private _subscribeToEvents;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private _resetPos;\n    private getHtmlElement;\n    private _measureBoundaries;\n    private _applyBoundaries;\n    onDragStart(event: any): void;\n    private _updateScrollPos;\n    onDragMove(event: any): void;\n    onDragEnd(): void;\n    private _updatePosition;\n}\n"]}