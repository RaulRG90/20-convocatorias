import { ElementRef, Renderer2, OnInit, OnDestroy, EventEmitter } from '@angular/core';
import { Observable } from 'rxjs';
export declare class MdbDraggableDirective implements OnInit, OnDestroy {
    private el;
    private renderer;
    private document;
    disabled: boolean;
    resetPosition: boolean;
    get boundTo(): any;
    set boundTo(value: any);
    private _boundTo;
    get handle(): any;
    set handle(value: any);
    private _handle;
    snapSensitivity: number;
    lockAxis: string;
    autoScroll: boolean;
    scrollSpeed: number;
    scrollSensitivity: number;
    snapToGrid: boolean;
    gridSize: number;
    dragStart: EventEmitter<HTMLElement>;
    dragEnd: EventEmitter<HTMLElement>;
    private elPos;
    private startPos;
    private boundaries;
    private draggableEl;
    offsetX: Number;
    offsetY: Number;
    start$: Observable<any>;
    move$: Observable<any>;
    end$: Observable<any>;
    private destroy$;
    constructor(el: ElementRef, renderer: Renderer2, document: any);
    movable: boolean;
    dragging: boolean;
    private _subscribeToEvents;
    ngOnInit(): void;
    ngOnDestroy(): void;
    private _resetPos;
    private getHtmlElement;
    private _measureBoundaries;
    private _applyBoundaries;
    onDragStart(event: any): void;
    private _updateScrollPos;
    onDragMove(event: any): void;
    onDragEnd(): void;
    private _updatePosition;
}
