import { Component, Input, ViewEncapsulation } from '@angular/core';
import { MdbFilterService } from "../mdb-filter.service";
export class MdbFilterComponent {
    constructor(filterService) {
        this.filterService = filterService;
        this._filter = '';
        this.filterService.filterChange().subscribe((filter) => {
            this.filter = filter;
        });
    }
    set filter(value) {
        const previousValue = this.filter;
        this._filter = value;
        this.filterService.setPreviousCurrentFilter({ previousValue: previousValue, currentValue: this._filter });
    }
    get filter() {
        return this._filter;
    }
}
MdbFilterComponent.decorators = [
    { type: Component, args: [{
                selector: 'mdb-filter',
                template: "<div class=\"filter filter-basic\">\n<ng-content></ng-content>\n</div>\n",
                encapsulation: ViewEncapsulation.None,
                styles: [".filter .filter-gallery{position:relative}.filter .item{display:block;z-index:1}.filter .item-panoramic{width:410px}.filter .item-content{position:relative;width:100%;height:100%}.filter .item-content img{width:100%;height:auto}.filter-draggable .item{cursor:move}.filter-fillgaps .item{cursor:move}\n"]
            },] }
];
MdbFilterComponent.ctorParameters = () => [
    { type: MdbFilterService }
];
MdbFilterComponent.propDecorators = {
    filter: [{ type: Input, args: ['filter',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWZpbHRlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9tZGItZmlsdGVyL3NyYy9saWIvbWRiLWZpbHRlci9tZGItZmlsdGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLEtBQUssRUFBRSxpQkFBaUIsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNsRSxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx1QkFBdUIsQ0FBQztBQVF2RCxNQUFNLE9BQU8sa0JBQWtCO0lBWTdCLFlBQW9CLGFBQStCO1FBQS9CLGtCQUFhLEdBQWIsYUFBYSxDQUFrQjtRQVgzQyxZQUFPLEdBQVcsRUFBRSxDQUFDO1FBWTNCLElBQUksQ0FBQyxhQUFhLENBQUMsWUFBWSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUMsTUFBYyxFQUFFLEVBQUU7WUFDN0QsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBZEQsSUFDSSxNQUFNLENBQUMsS0FBYTtRQUN0QixNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQ2xDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxhQUFhLENBQUMsd0JBQXdCLENBQUMsRUFBQyxhQUFhLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFDLENBQUMsQ0FBQztJQUMxRyxDQUFDO0lBQ0QsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7OztZQWhCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFlBQVk7Z0JBQ3RCLG9GQUEwQztnQkFFMUMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7O2FBQ3RDOzs7WUFQTyxnQkFBZ0I7OztxQkFVckIsS0FBSyxTQUFDLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgSW5wdXQsIFZpZXdFbmNhcHN1bGF0aW9ufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7TWRiRmlsdGVyU2VydmljZX0gZnJvbSBcIi4uL21kYi1maWx0ZXIuc2VydmljZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdtZGItZmlsdGVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21kYi1maWx0ZXIuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9tZGItZmlsdGVyLmNvbXBvbmVudC5zY3NzJ10sXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmVcbn0pXG5leHBvcnQgY2xhc3MgTWRiRmlsdGVyQ29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfZmlsdGVyOiBzdHJpbmcgPSAnJztcbiAgQElucHV0KCdmaWx0ZXInKVxuICBzZXQgZmlsdGVyKHZhbHVlOiBzdHJpbmcpIHtcbiAgICBjb25zdCBwcmV2aW91c1ZhbHVlID0gdGhpcy5maWx0ZXI7XG4gICAgdGhpcy5fZmlsdGVyID0gdmFsdWU7XG4gICAgdGhpcy5maWx0ZXJTZXJ2aWNlLnNldFByZXZpb3VzQ3VycmVudEZpbHRlcih7cHJldmlvdXNWYWx1ZTogcHJldmlvdXNWYWx1ZSwgY3VycmVudFZhbHVlOiB0aGlzLl9maWx0ZXJ9KTtcbiAgfVxuICBnZXQgZmlsdGVyKCkge1xuICAgIHJldHVybiB0aGlzLl9maWx0ZXI7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZpbHRlclNlcnZpY2U6IE1kYkZpbHRlclNlcnZpY2UpIHtcbiAgICB0aGlzLmZpbHRlclNlcnZpY2UuZmlsdGVyQ2hhbmdlKCkuc3Vic2NyaWJlKChmaWx0ZXI6IHN0cmluZykgPT4ge1xuICAgICAgdGhpcy5maWx0ZXIgPSBmaWx0ZXI7XG4gICAgfSk7XG4gIH1cblxufVxuIl19